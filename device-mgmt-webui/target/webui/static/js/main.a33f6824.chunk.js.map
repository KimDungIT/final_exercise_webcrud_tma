{"version":3,"sources":["images/clound_icon.png","images/connection.png","components/Header.js","components/common/button/IconButton.js","constants/Config.js","util/ApiCaller.js","components/DialogDevice.js","components/DialogDelete.js","components/PathDevices.js","components/DeviceItem.js","components/DeviceList.js","components/common/loading/loading.js","components/TabMenuDevices.js","pages/DevicesPage.js","components/PathDeviceDetail.js","components/DialogEdit.js","components/DeviceDetail.js","components/TabMenuDeviceDetail.js","pages/DeviceDetailPage.js","components/DialogDeviceHolder.js","components/PathDeviceHolder.js","components/DeviceHolderItem.js","components/DeviceHolderList.js","components/TabMenuDeviceHolder.js","pages/DeviceHolderPage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","id","Component","IconButton","this","props","onClick","disable","icon","title","Tooltip","disabled","React","window","location","protocol","hostname","axiosIntance","axios","create","callApi","endpoint","method","body","ax","url","data","trackPromise","DialogDevice","handleSubmit","e","preventDefault","deviceHolderName","state","onCloseDialog","deviceInfo","name","hardwareType","interfaceVersion","connectionMechanism","then","res","status","notification","success","message","description","setNeedRefreshTabMenuState","setState","catch","error","response","onChangeDiviceInfo","event","target","value","prevState","open","deviceHolder","Dialog","openDialog","onClose","aria-labelledby","DialogTitle","DialogContent","onSubmit","noValidate","autoComplete","TextField","margin","label","fullWidth","autoFocus","required","onChange","select","map","option","MenuItem","key","DialogActions","Button","color","variant","type","DialogDelete","handleCloseDelete","history","param","deleteDevices","deleteDeviceItem","deleteDeviceHolders","push","setNeedRefreshDeviceHolderState","Typography","gutterBottom","PathDevices","onClickDeleteButton","openDelete","onClickReloadButton","console","log","handleClickOpen","openAdd","handleClose","pathIconButton","pathName","iconButtons","pathList","to","handleClick","info","length","Breadcrumbs","separator","fontSize","aria-label","element","index","iconButton","DeviceItem","deviceItem","result","Card","CardMedia","image","cloud","CardContent","DeviceList","handleChangePage","page","limit","numberRowPerPage","changePage","handleChangeRowPerPage","deviceList","totalRow","total","prevProps","JSON","stringify","hasDeviceList","columns","field","render","rowData","device","options","toolbar","components","Pagination","TablePagination","component","labelRowsPerPage","rowsPerPageOptions","rowsPerPage","count","onChangePage","onChangeRowsPerPage","LoadingSpinerComponent","promiseInProgress","usePromiseTracker","active","spinner","size","a11yProps","TabPanel","children","other","hidden","TabMenuDevices","getDiviceList","deviceVOS","handleChange","newValue","needRefreshTabMenu","AppBar","position","elevation","Tabs","indicatorColor","textColor","Tab","DevicesPage","match","params","PathDeviceDetail","setNeedRefreshDevice","iconButtonList","DialogEdit","changeName","columnName","renderField","validateInput","resetDivice","valid","deviceInfoBackup","handleCancel","DeviceDetail","InputAdornment","TabMenuDeviceDetail","getDevice","needRefreshDevice","DeviceDetailPage","DialogDeviceHolder","onChangeDiviceHolder","PathDeviceHolder","DeviceHolderItem","deviceHolderItem","connection","noOfDevices","DeviceHolderList","deviceHolderList","hasDeviceHolderList","TabMenuDeviceHolder","getDiviceHolderList","deviceHolderVOS","needRefreshDeviceHolder","DeviceHolderPage","NotFoundPage","App","config","duration","path","exact","Boolean","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,yC,0CCA3CD,EAAOC,QAAU,IAA0B,wC,kLCY5BC,E,uKARX,OACE,yBAAKC,UAAU,MAAMC,GAAG,UAAxB,sB,GAHeC,a,2GCuBNC,E,uKApBH,IAAD,EAMHC,KAAKC,MAJPC,EAFK,EAELA,QAFK,IAGLC,eAHK,SAILC,EAJK,EAILA,KACAC,EALK,EAKLA,MAGF,OACE,oCACE,kBAACC,EAAA,EAAD,CAASD,MAAOA,GACd,kBAAC,IAAD,CAAeH,QAASA,EAASK,SAAUJ,GACxCC,S,GAbYI,IAAMV,W,+GCDRW,OAAOC,SAASC,SAAkBF,OAAOC,SAASE,S,QCAnEC,EAAeC,IAAMC,OAAO,IAEnB,SAASC,EAAQC,GAAgC,IAAtBC,EAAqB,uDAAZ,MAAOC,EAAK,uCACvDC,EAAKP,EAAa,CAClBK,OAAQA,EACRG,IAAG,kBAAcJ,GACjBK,KAAOH,IAEX,OAAOI,uBAAaH,G,aCiLTI,G,wDA/Kb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAYRwB,aAAe,SAACC,GACdA,EAAEC,iBADkB,IAEbC,EAAoB,EAAKC,MAAzBD,iBACP,EAAK3B,MAAM6B,gBAHS,MAShB,EAAKD,MAAME,WAJbC,EALkB,EAKlBA,KACAC,EANkB,EAMlBA,aACAC,EAPkB,EAOlBA,iBACAC,EARkB,EAQlBA,oBAUAH,GACAC,GACAC,GACAC,GACAP,EAQFZ,EAAQ,SAAU,OApBC,CACjBgB,OACAC,eACAC,mBACAC,sBACAP,qBAgBCQ,MAAK,SAACC,GACc,MAAfA,EAAIC,SACNC,IAAaC,QAAQ,CACnBC,QAAS,UACTC,YAAa,6BAEf,EAAKzC,MAAM0C,4BAA2B,GACtC,EAAKC,SAAS,CAAEb,WAAY,SAG/Bc,OAAM,SAACC,GACCA,EAAMC,SAASzB,KACHiB,IAAaO,MAAM,CACjBL,QAAS,QACTC,YAAaI,EAAMC,SAASzB,KAAKmB,UAGnCF,IAAaO,MAAM,CACjBL,QAAS,QACTC,YAAaI,EAAML,aA1B1CF,IAAaO,MAAM,CACjBL,QAAS,QACTC,YAAa,+EAvCA,EAyEnBM,mBAAqB,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBlB,EADsB,EACtBA,KAAMmB,EADgB,EAChBA,MACd,EAAKP,UAAS,SAACQ,GAAD,MAAgB,CAC5BrB,WAAW,eACNqB,EAAUrB,WADL,eAEPC,EAAOmB,SA5EZ,EAAKtB,MAAQ,CACXwB,MAAM,EACNtB,WAAY,GACZH,iBAAkB,IALH,E,gEAUjB5B,KAAK4C,SAAS,CAAChB,iBAAkB5B,KAAKC,MAAMqD,iB,+BA8E5C,OACE,6BACE,kBAACC,EAAA,EAAD,CACEF,KAAMrD,KAAKC,MAAMuD,WACjBC,QAASzD,KAAKC,MAAM6B,cACpB4B,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAa9D,GAAG,qBAAhB,iBACA,kBAAC+D,EAAA,EAAD,KACE,0BAAMC,SAAU7D,KAAKyB,aAAcqC,YAAU,EAACC,aAAa,OACzD,kBAACC,EAAA,EAAD,CACEC,OAAO,QACPpE,GAAG,OACHmC,KAAK,OACLkC,MAAM,cACNC,WAAS,EACTC,WAAS,EACTC,UAAQ,EACRC,SAAUtE,KAAKgD,qBAEjB,kBAACgB,EAAA,EAAD,CACEC,OAAO,QACPpE,GAAG,eACHmC,KAAK,eACLkC,MAAM,gBACNC,WAAS,EACTE,UAAQ,EACRC,SAAUtE,KAAKgD,qBAEjB,kBAACgB,EAAA,EAAD,CACEC,OAAO,QACPpE,GAAG,mBACHmC,KAAK,mBACLkC,MAAM,oBACNC,WAAS,EACTE,UAAQ,EACRC,SAAUtE,KAAKgD,qBAEjB,kBAACgB,EAAA,EAAD,CACEnE,GAAG,sBACHmC,KAAK,sBACLiC,OAAO,QACPM,QAAM,EACNL,MAAM,uBACNI,SAAUtE,KAAKgD,mBACfqB,UAAQ,EACRF,WAAS,GAlDW,CAC9B,CAAEhB,MAAO,aACT,CAAEA,MAAO,iBAkD0BqB,KAAI,SAACC,GAAD,OAC3B,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOtB,MAAOA,MAAOsB,EAAOtB,OACxCsB,EAAOtB,WAIZ,kBAACa,EAAA,EAAD,CACEnE,GAAG,eACHmC,KAAK,mBACLiC,OAAO,QACPC,MAAM,gBACNf,MAAOnD,KAAKC,MAAMqD,aAClBe,UAAQ,EACR9D,UAAQ,EACR4D,WAAS,IAKb,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ3E,QAASF,KAAKC,MAAM6B,cAAegD,MAAM,WAAjD,UAGA,kBAACD,EAAA,EAAD,CACEE,QAAQ,YACRC,KAAK,SACLF,MAAM,WAHR,iB,GAhKWhF,cC+GZmF,E,4MA9GbxD,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAK1B,MAAMiF,oBAFS,MAGiC,EAAKjF,MAAlDkF,EAHY,EAGZA,QAASC,EAHG,EAGHA,MAAO/E,EAHJ,EAGIA,MAAO2B,EAHX,EAGWA,KAAMsB,EAHjB,EAGiBA,aACxB,YAAVjD,GACD,EAAKgF,cAAcD,EAAOD,GAEf,WAAV9E,GACD,EAAKiF,iBAAiBtD,EAAMmD,EAAS7B,GAE1B,mBAAVjD,GACD,EAAKkF,uB,EAKTF,cAAgB,SAACD,EAAOD,GACtBnE,EAAQ,2BAAD,OAA4BoE,GAAS,SAAU,MACnDhD,MAAK,SAACC,GACc,MAAfA,EAAIC,SACNC,IAAaC,QAAQ,CACnBC,QAAS,UACTC,YAAa,qCAEf,EAAKzC,MAAM0C,4BAA2B,GACtCwC,EAAQK,KAAK,SAGhB3C,OAAM,SAACC,GACNP,IAAaO,MAAM,CACjBL,QAAS,SACTC,YAAaI,EAAML,c,EAK3B6C,iBAAmB,SAACtD,EAAMmD,EAAS7B,GACjCtC,EAAQ,UAAD,OAAWgB,GAAQ,SAAU,MACjCI,MAAK,SAACC,GACc,MAAfA,EAAIC,SACNC,IAAaC,QAAQ,CACnBC,QAAS,UACTC,YAAa,gCAGfyC,EAAQK,KAAR,WAAiBlC,EAAjB,iBAGHT,OAAM,SAACC,GACNP,IAAaO,MAAM,CACjBL,QAAS,SACTC,YAAaI,EAAML,c,EAK3B8C,oBAAsB,WACpBvE,EAAQ,gBAAiB,SAAU,MAChCoB,MAAK,SAACC,GACc,MAAfA,EAAIC,SACNC,IAAaC,QAAQ,CACnBC,QAAS,UACTC,YAAa,2CAEf,EAAKzC,MAAMwF,iCAAgC,OAG9C5C,OAAM,SAACC,GACNP,IAAaO,MAAM,CACjBL,QAAS,SACTC,YAAaI,EAAML,c,uDAKjB,IACDe,EAAcxD,KAAKC,MAAnBuD,WACP,OACE,6BACKA,GACC,kBAACD,EAAA,EAAD,CACAF,KAAMrD,KAAKC,MAAMuD,WACjBC,QAASzD,KAAKC,MAAMiF,kBACpBxB,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAa9D,GAAG,qBAAhB,UAA4CG,KAAKC,MAAMI,OACvD,kBAACuD,EAAA,EAAD,KACE,0BAAMC,SAAU7D,KAAKyB,aAAcqC,YAAU,EAACC,aAAa,OAC/D,kBAAC2B,EAAA,EAAD,CAAYX,QAAQ,QAAQY,cAAY,GAAxC,wCAA+E3F,KAAKC,MAAMI,MAA1F,KACM,kBAACuE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ3E,QAASF,KAAKC,MAAMiF,kBAAmBJ,MAAM,WAArD,MAGA,kBAACD,EAAA,EAAD,CACEE,QAAQ,YACRC,KAAK,SACLF,MAAM,WAHR,gB,GA/FShF,a,QCwJZ8F,E,kDApJb,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IAOR4F,oBAAsB,WACpB,EAAKjD,SAAS,CAAEkD,YAAY,KATX,EAYnBC,oBAAsB,WACpBC,QAAQC,IAAI,8BACZ,EAAKhG,MAAM0C,4BAA2B,IAdrB,EAiBnBuD,gBAAkB,WAChB,EAAKtD,SAAS,CAAEuD,SAAS,KAlBR,EAqBnBC,YAAc,WACZ,EAAKxD,SAAS,CAAEuD,SAAS,KAtBR,EAyBnBjB,kBAAoB,WAClB,EAAKtC,SAAS,CAAEkD,YAAY,KA1BX,EA6BnBO,eAAiB,CACf,CACEC,SAAU,aACVC,YAAa,CACX,CACE1G,GAAI,EACJO,KAAM,kBAAC,IAAD,MACND,SAAS,EACTD,QAAS,EAAKgG,gBACd7F,MAAO,iBAET,CACER,GAAI,EACJO,KAAM,kBAAC,IAAD,MACND,SAAS,EACTD,QAAS,EAAK2F,oBACdxF,MAAO,sBAET,CACER,GAAI,EACJO,KAAM,kBAAC,IAAD,MACND,SAAS,EACTD,QAAS,EAAK6F,oBACd1F,MAAO,cApDI,EA0DnBmG,SAAW,CACT,CACExE,KAAM,iBACN8C,MAAO,UACP2B,GAAI,IACJvG,QAAS,EAAKwG,YACd9G,UAAW,QAEb,CACEoC,KAAM,EAAK/B,MAAMmF,MACjBN,MAAO,cACPlF,UAAW,SArEI,EAyEnB8G,YAAc,SAACzD,GACbA,EAAMtB,iBACNqE,QAAQW,KAAK,8BAzEb,EAAK9E,MAAQ,CACXsE,SAAS,EACTL,YAAY,GAJG,E,qDA+EjB,IAAMc,EAAS5G,KAAKwG,SAASI,OAC7B,OACE,yBAAKhH,UAAU,iCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mCACb,kBAACiH,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,CAAkBC,SAAS,UACtCC,aAAW,cAEThH,KAAKwG,SAAShC,KAAI,SAACyC,EAASC,GAAV,OAClBN,IAAWM,EAAQ,EACjB,kBAAC5G,EAAA,EAAD,CAASqE,IAAKuC,EAAO7G,MAAO4G,EAAQjF,MAClC,kBAAC0D,EAAA,EAAD,CACEZ,MAAOmC,EAAQnC,MACflF,UAAWqH,EAAQrH,WAElBqH,EAAQjF,OAIb,kBAAC1B,EAAA,EAAD,CAASqE,IAAKuC,EAAO7G,MAAO4G,EAAQjF,MAClC,kBAAC,IAAD,CACE8C,MAAOmC,EAAQnC,MACf2B,GAAIQ,EAAQR,GACZvG,QAAS+G,EAAQ/G,QACjBN,UAAWqH,EAAQrH,WAElBqH,EAAQjF,WAMnB,wBAAInC,GAAG,eAAeG,KAAKC,MAAMmF,QAEnC,yBAAKxF,UAAU,+CACZI,KAAKqG,eAAe,GAAGE,YAAY/B,KAAI,SAAC2C,EAAYD,GAAb,OACtC,kBAAC,EAAD,CACEvC,IAAKuC,EACL9G,KAAM+G,EAAW/G,KACjBD,QAASgH,EAAWhH,QACpBD,QAASiH,EAAWjH,QACpBG,MAAO8G,EAAW9G,WAGtB,kBAAC,EAAD,CACEiD,aAActD,KAAKC,MAAMmF,MACzB5B,WAAYxD,KAAK6B,MAAMsE,QACvBrE,cAAe9B,KAAKoG,YACpBzD,2BAA4B3C,KAAKC,MAAM0C,6BAGzC,kBAAC,EAAD,CACEtC,MAAM,UACN+E,MAAOpF,KAAKC,MAAMmF,MAClBD,QAASnF,KAAKC,MAAMkF,QACpB7B,aAActD,KAAKC,MAAMmF,MACzB5B,WAAYxD,KAAK6B,MAAMiE,WACvBZ,kBAAmBlF,KAAKkF,kBACxBvC,2BAA4B3C,KAAKC,MAAM0C,oC,GA3I3B7C,a,oGC2BXsH,G,uKA/BH,IACAC,EAAerH,KAAKC,MAApBoH,WACFC,EAASD,EAAWpF,aAAe,IAAMoF,EAAWnF,iBAC1D,OACE,6BACGmF,GACC,kBAAC,IAAD,CAAMZ,GAAE,WAAMY,EAAWzF,iBAAjB,oBAA6CyF,EAAWrF,OAC9D,kBAACuF,EAAA,EAAD,CAAMxC,QAAQ,WAAWnF,UAAU,YACjC,kBAAC4H,EAAA,EAAD,CAAW5H,UAAU,YAAY6H,MAAOC,KAAOrH,MAAM,WACrD,yBAAKT,UAAU,cACb,kBAAC+H,EAAA,EAAD,CAAa/H,UAAU,YACrB,kBAACU,EAAA,EAAD,CAASD,MAAOgH,EAAWrF,MACzB,kBAAC0D,EAAA,EAAD,CAAYX,QAAQ,KAAKY,cAAY,GAClC0B,EAAWrF,OAGhB,kBAAC1B,EAAA,EAAD,CAASD,MAAOiH,GACd,kBAAC5B,EAAA,EAAD,CAAYX,QAAQ,QAAQY,cAAY,GACrC0B,EAAWpF,aADd,IAC6BoF,EAAWnF,4B,GAnBnCpC,a,UC4FV8H,G,kDA/Fb,WAAY3H,GAAQ,IAAD,8BACjB,cAAMA,IA4BR4H,iBAAmB,SAACC,GAClB,EAAKlF,SAAS,CAAEkF,KAAMA,IACtB,IAAIC,EAAQ,EAAKlG,MAAMmG,iBACvB,EAAK/H,MAAMgI,WAAWH,EAAO,EAAGC,IAhCf,EAmCnBG,uBAAyB,SAAC/E,GACxB,EAAKP,SAAS,CAAEoF,iBAAkB7E,IAClC,EAAKP,SAAS,CAAEkF,KAAM,IACtB,EAAK7H,MAAMgI,WAAW,EAAG9E,IApCzB,EAAKtB,MAAQ,CACXsG,WAAY,GACZH,iBAAkB,EAClBI,SAAU,EACVN,KAAM,GANS,E,gEAWjB9H,KAAK4C,SAAS,CACZuF,WAAYnI,KAAKC,MAAMkI,WACvBC,SAAUpI,KAAKC,MAAMoI,U,yCAINC,EAAWlF,GAE1BmF,KAAKC,UAAUxI,KAAKC,MAAMkI,cAC1BI,KAAKC,UAAUF,EAAUH,aAEzBnI,KAAK4C,SAAS,CACZuF,WAAYnI,KAAKC,MAAMkI,WACvBC,SAAUpI,KAAKC,MAAMoI,U,+BAiBjB,IAAD,SACwBrI,KAAK6B,MAA9BsG,EADC,EACDA,WAAYC,EADX,EACWA,SACZK,EAAgBN,GAAcA,EAAWvB,OAAS,EACxD,OACE,yBAAKhH,UAAU,iCACZ6I,GACC,kBAAC,IAAD,CACEC,QAAS,CACP,CACEC,MAAO,aACPC,OAAQ,SAACC,GACP,IAAIvB,EAAS,yCAWb,OAVIuB,EAAQxB,YAAcwB,EAAQxB,WAAWT,OAAS,IACpDU,EAASuB,EAAQxB,WAAW7C,KAAI,SAACsE,EAAQ5B,GAAT,OAC9B,yBACEvC,IAAKuC,EACLtH,UAAU,6CAEV,kBAAC,GAAD,CAAYyH,WAAYyB,SAIvB,yBAAKlJ,UAAU,kBAAf,IAAkC0H,EAAlC,QAIbhG,KAAM,CAAC,CAAE+F,WAAYc,IACrBY,QAAS,CACPC,SAAS,GAEXC,WAAY,CACVC,WAAY,SAACjJ,GAAD,OACV,kBAACkJ,GAAA,EAAD,CAEEC,UAAU,MACVC,iBAAiB,kBACjBC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,YAAa,EAAK1H,MAAMmG,iBACxBwB,MAAOpB,EACPN,KAAM,EAAKjG,MAAMiG,KACjB2B,aAAc,SAAC/H,EAAGoG,GAAJ,OAAa,EAAKD,iBAAiBC,IACjD4B,oBAAqB,SAACzG,GACpB,EAAKiF,uBAAuBjF,EAAMC,OAAOC,mB,GApFpCrD,a,0CCUV6J,GAVgB,SAAC1J,GAAW,IACjC2J,EAAsBC,8BAAtBD,kBACR,OACE,kBAAC,KAAD,CACEE,OAAQF,EACRG,QAAS,kBAAC,KAAD,CAAYC,KAAM,GAAI/F,OAAQ,EAAGa,MAAO,eCAjDmF,GAAY,SAAC/C,EAAO/G,GACxB,MAAO,CACLN,GAAG,cAAD,OAAgBqH,GAClB,gBAAgB,mBAAhB,OAAoCA,GACpC3G,SAAUJ,IAIR+J,GAAW,SAACjK,GAAW,IACnBkK,EAAqClK,EAArCkK,SAAUhH,EAA2BlD,EAA3BkD,MAAO+D,EAAoBjH,EAApBiH,MAAUkD,EADT,YACmBnK,EADnB,8BAE1B,OACE,uCAAKoK,OAAQlH,IAAU+D,GAAWkD,EAAlC,CAAyCxK,UAAU,eAChDuD,IAAU+D,GAAS,6BAAMiD,KA4GjBG,G,kDAtGb,WAAYrK,GAAQ,IAAD,8BACjB,cAAMA,IAWRsK,cAAgB,SAACjH,EAAcwE,EAAMC,GACnC/G,EAAQ,UAAD,OAAWsC,EAAX,iBAAgCwE,EAAhC,kBAA8CC,GAAS,MAAO,MAClE3F,MAAK,SAACC,GACc,MAAfA,EAAIC,QACN,EAAKM,SAAS,CACZuF,WAAY9F,EAAIf,KAAKkJ,UACrBnC,MAAOhG,EAAIf,KAAK+G,WAIrBxF,OAAM,SAACC,GACNP,IAAaO,MAAM,CACjBL,QAAS,SACTC,YAAa,QAAUI,EAAML,cAzBlB,EA6CnBwF,WAAa,SAACH,EAAMC,GAClB,EAAKnF,SAAS,CACZkF,KAAMA,EACNC,MAAOA,IAET,EAAKwC,cAAc,EAAKtK,MAAMmF,MAAO0C,EAAMC,IAlD1B,EAqDnB0C,aAAe,SAACxH,EAAOyH,GACrB,EAAK9H,SAAS,CAAEO,MAAOuH,KApDvB,EAAK7I,MAAQ,CACXsB,MAAO,EACPgF,WAAY,GACZ7E,aAAc,GACd+E,MAAM,EACNP,KAAK,EACLC,MAAO,GARQ,E,gEAgCjB/H,KAAK4C,SAAS,CAAEU,aAActD,KAAKC,MAAMmF,QAFvB,MAGEpF,KAAK6B,MAApBiG,EAHa,EAGbA,KAAMC,EAHO,EAGPA,MACX/H,KAAKuK,cAAcvK,KAAKC,MAAMmF,MAAO0C,EAAMC,K,yCAG1BO,EAAWlF,GAC5B,GAAIpD,KAAKC,MAAM0K,mBAAoB,CAAC,IAAD,EACb3K,KAAK6B,MAApBiG,EAD4B,EAC5BA,KAAMC,EADsB,EACtBA,MACX/H,KAAKuK,cAAcvK,KAAKC,MAAMmF,MAAO0C,EAAMC,GAC3C/H,KAAKC,MAAM0C,4BAA2B,M,+BAgBhC,IAAD,EACqB3C,KAAK6B,MAA3BsG,EADC,EACDA,WAAYE,EADX,EACWA,MACVjD,EAAUpF,KAAKC,MAAfmF,MACR,OACE,yBAAKxF,UAAU,OACb,kBAACgL,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAW,GACnC,kBAACC,EAAA,EAAD,CACE5H,MAAOnD,KAAK6B,MAAMsB,MAClBmB,SAAUtE,KAAKyK,aACfzD,aAAW,YAEXgE,eAAe,UACfC,UAAU,UACVrL,UAAU,aAEV,kBAACsL,EAAA,EAAD,eACEtL,UAAU,WACVsE,MAAM,WACF+F,GAAU,GAAG,KAEnB,kBAACiB,EAAA,EAAD,eACEtL,UAAU,WACVsE,MAAM,cACF+F,GAAU,GAAG,KAEnB,kBAACiB,EAAA,EAAD,eACEtL,UAAU,WACVsE,MAAM,WACF+F,GAAU,GAAG,OAItB7E,GACC,kBAAC,GAAD,CAAUjC,MAAOnD,KAAK6B,MAAMsB,MAAO+D,MAAO,GACxC,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAYe,WAAYjI,KAAKiI,WAAY7C,MAAOA,EAAO+C,WAAYA,EAAYE,MAAOA,KAG1F,kBAAC,GAAD,CAAUlF,MAAOnD,KAAK6B,MAAMsB,MAAO+D,MAAO,IAC1C,kBAAC,GAAD,CAAU/D,MAAOnD,KAAK6B,MAAMsB,MAAO+D,MAAO,S,GAjGrBpH,aCWdqL,G,kDAjCb,WAAYlL,GAAO,IAAD,8BAChB,cAAMA,IAMR0C,2BAA6B,SAACQ,GAC5B,EAAKP,SAAS,CACZ+H,mBAAoBxH,KAPtB,EAAKtB,MAAQ,CACX8I,oBAAoB,GAHN,E,qDAchB,IAAIvF,EAAQpF,KAAKC,MAAMmL,MAAMC,OAAO/H,aAC7B6B,EAAWnF,KAAKC,MAAhBkF,QACP,OACE,yBAAKvF,UAAU,iCACb,yBAAKA,UAAU,MAAMC,GAAG,QACtB,kBAAC,EAAD,CACAsF,QAASA,EACTC,MAAOA,EACPzC,2BAA4B3C,KAAK2C,8BAEnC,kBAAC,GAAD,CACAyC,MAAOA,EACPuF,mBAAoB3K,KAAK6B,MAAM8I,mBAC/BhI,2BAA4B3C,KAAK2C,kC,GA5Bf7C,aCiJXwL,G,kDAvIb,WAAYrL,GAAQ,IAAD,8BACjB,cAAMA,IAOR4F,oBAAsB,WACpB,EAAKjD,SAAS,CAAEkD,YAAY,KATX,EAYnBC,oBAAsB,WACpB,EAAK9F,MAAMsL,sBAAqB,IAbf,EAgBnBrG,kBAAoB,WAClB,EAAKtC,SAAS,CAAEkD,YAAY,KAjBX,EAoBnBO,eAAiB,iBAAM,CACrB,CACEC,SAAU,aACVC,YAAa,CACX,CACE1G,GAAI,EACJO,KAAM,kBAAC,IAAD,MACND,SAAS,EACTD,QAAS,EAAK2F,oBACdxF,MAAO,iBAET,CACER,GAAI,EACJO,KAAM,kBAAC,IAAD,MACND,SAAS,EACTD,QAAS,EAAK6F,oBACd1F,MAAO,eApCI,EA0CnBmG,SAAW,CACT,CACExE,KAAM,iBACN8C,MAAO,UACP2B,GAAI,IACJvG,QAAS,EAAKwG,YACd9G,UAAW,QAEb,CACEoC,KAAM,EAAK/B,MAAMqD,aACjBwB,MAAO,UACP2B,GAAG,IAAD,OAAM,EAAKxG,MAAMqD,aAAjB,YACFpD,QAAS,EAAKwG,YACd9G,UAAW,QAEb,CACEoC,KAAM,EAAK/B,MAAM+B,KACjB8C,MAAO,cACPlF,UAAW,SA5DI,EAgEnB8G,YAAc,SAACzD,GACbA,EAAMtB,iBACNqE,QAAQW,KAAK,8BAhEb,EAAK9E,MAAQ,CACXwB,MAAM,EACNyC,YAAY,GAJG,E,qDAsEjB,IACM0F,EADiBxL,KAAKqG,iBACU,GAAGE,YAAY/B,KACnD,SAAC2C,EAAYD,GAAb,OACE,kBAAC,EAAD,CACEvC,IAAKuC,EACL9G,KAAM+G,EAAW/G,KACjBD,QAASgH,EAAWhH,QACpBD,QAASiH,EAAWjH,QACpBG,MAAO8G,EAAW9G,WAIlBuG,EAAS5G,KAAKwG,SAASI,OAC7B,OACE,yBAAKhH,UAAU,iCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mCACb,kBAACiH,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,CAAkBC,SAAS,UACtCC,aAAW,cAEVhH,KAAKwG,SAAShC,KAAI,SAACyC,EAASC,GAAV,OACjBN,IAAWM,EAAQ,EACjB,kBAAC5G,EAAA,EAAD,CAASqE,IAAKuC,EAAO7G,MAAO4G,EAAQjF,MAClC,kBAAC0D,EAAA,EAAD,CACEZ,MAAOmC,EAAQnC,MACflF,UAAWqH,EAAQrH,WAElBqH,EAAQjF,OAIb,kBAAC1B,EAAA,EAAD,CAASqE,IAAKuC,EAAO7G,MAAO4G,EAAQjF,MAClC,kBAAC,IAAD,CACE8C,MAAOmC,EAAQnC,MACf2B,GAAIQ,EAAQR,GACZvG,QAAS+G,EAAQ/G,QACjBN,UAAWqH,EAAQrH,WAElBqH,EAAQjF,WAMnB,wBAAInC,GAAG,eAAeG,KAAKC,MAAM+B,OAEnC,yBAAKpC,UAAU,+CACZ4L,IAGL,kBAAC,EAAD,CACEnL,MAAM,SACN8E,QAASnF,KAAKC,MAAMkF,QACpBnD,KAAMhC,KAAKC,MAAM+B,KACjBsB,aAActD,KAAKC,MAAMqD,aACzBE,WAAYxD,KAAK6B,MAAMiE,WACvBZ,kBAAmBlF,KAAKkF,kBACxBqG,qBAAsBvL,KAAKC,MAAMsL,4B,GAjIZzL,a,UCyNhB2L,G,kDAxNb,WAAYxL,GAAQ,IAAD,8BACb,cAAMA,IAcRyL,WAAa,WACX,IAAIpE,EAAS,GAEb,OADuB,EAAKrH,MAApB0L,YAEN,IAAK,eACHrE,EAAS,gBACT,MACF,IAAK,mBACHA,EAAS,oBACT,MACF,IAAK,sBACHA,EAAS,uBAKb,OAAOA,GA/BM,EA8CfpD,MAAQ,CACNjC,aAAc,gBACdC,iBAAkB,oBAClBC,oBAAqB,wBAjDR,EAoDfyJ,YAAc,WAAO,IACXD,EAAe,EAAK1L,MAApB0L,WAKJrE,EAAS,yCACb,IAAKqE,EACH,OAAOrE,EAET,OAAQqE,GACN,IAAK,sBACHrE,EACE,oCACE,kBAACtD,EAAA,EAAD,CACEnE,GAAG,sBACH0E,QAAM,EACNL,MAAM,uBACNlC,KAAK,sBACLmB,MAAO,EAAKtB,MAAME,WAAW4J,GAC7BrH,SAAU,EAAKtB,mBACfqB,UAAQ,EACRF,WAAS,GApBa,CAC9B,CAAEhB,MAAO,aACT,CAAEA,MAAO,iBAoBwBqB,KAAI,SAACC,GAAD,OAC3B,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAOtB,MAAOA,MAAOsB,EAAOtB,OACxCsB,EAAOtB,YAMlB,MACF,QACEmE,EACE,oCACE,kBAACtD,EAAA,EAAD,CACEC,OAAO,QACPjC,KAAM2J,EACNzH,MAAO,EAAKA,MAAMyH,GAClBxH,WAAS,EACTE,UAAQ,EACRC,SAAU,EAAKtB,mBACfG,MAAO,EAAKtB,MAAME,WAAW4J,MAMvC,OAAOrE,GArGM,EAwGf7F,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAK1B,MAAM6B,gBAFS,MAShB,EAAKD,MAAME,WACTA,EAAa,CACjBC,KAXkB,EAIlBA,KAQAC,aAZkB,EAKlBA,aAQAC,iBAbkB,EAMlBA,iBAQAC,oBAdkB,EAOlBA,oBAQAP,iBAfkB,EAQlBA,kBAUF,GADAoE,QAAQC,IAAI,eAAgBlE,GACxB,EAAK8J,cAAc9J,GAMrB,OALA,EAAK+J,mBACLvJ,IAAaO,MAAM,CACjBL,QAAS,SACTC,YAAa,wBAIjB1B,EAAQ,UAAD,OAAW,EAAKf,MAAM8B,WAAWC,MAAQ,MAAOD,GACpDK,MAAK,SAACC,GACc,MAAfA,EAAIC,SACNC,IAAaC,QAAQ,CACnBC,QAAS,UACTC,YAAa,8BAGf,EAAKzC,MAAMsL,sBAAqB,OAGnC1I,OAAM,SAACC,GACNP,IAAaO,MAAM,CACjBL,QAAS,SACTC,YAAaI,EAAML,cAhJZ,EAqJfoJ,cAAgB,SAAC/C,GACf,IAAIiD,GAAQ,EAWZ,MAT4B,KAAxBjD,EAAO7G,eACT8J,GAAQ,GAEsB,KAA5BjD,EAAO5G,mBACT6J,GAAQ,GAEyB,KAA/BjD,EAAO3G,sBACT4J,GAAQ,GAEHA,GAjKM,EAoKf/I,mBAAqB,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBlB,EADsB,EACtBA,KAAMmB,EADgB,EAChBA,MACd6C,QAAQC,IAAI,SAAUjE,GACtB,EAAKY,UAAS,SAACQ,GAAD,MAAgB,CAC5BrB,WAAW,eACNqB,EAAUrB,WADL,eAEPC,EAAOmB,SA1KC,EA+Kd2I,YAAc,WACX,EAAKlJ,SAAS,CACZb,WAAY,EAAKF,MAAMmK,mBACtB,kBAAMhG,QAAQC,IAAI,EAAKpE,WAlLf,EAqLboK,aAAe,WACb,EAAKhM,MAAM6B,gBACX,EAAKgK,eArLP,EAAKjK,MAAQ,CACXE,WAAY,GACZiK,iBAAkB,IAJP,E,gEASbhM,KAAK4C,SAAS,CACVb,WAAY/B,KAAKC,MAAM8B,WACvBiK,iBAAkBhM,KAAKC,MAAM8B,e,yCAuBhBuG,EAAWlF,GAExBmF,KAAKC,UAAUxI,KAAKC,MAAM8B,cAC1BwG,KAAKC,UAAUF,EAAUvG,aAEzB/B,KAAK4C,SAAS,CACXb,WAAY/B,KAAKC,MAAM8B,WACvBiK,iBAAkBhM,KAAKC,MAAM8B,e,+BAkJpC,IAAM6J,EAAc5L,KAAK4L,cACnB5J,EAAOhC,KAAK0L,aAClB,OACE,6BACE,kBAACnI,EAAA,EAAD,CACEF,KAAMrD,KAAKC,MAAMuD,WACjBC,QAASzD,KAAKC,MAAM6B,cACpB4B,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAa9D,GAAG,qBAAhB,QAA0CmC,GAC1C,kBAAC4B,EAAA,EAAD,KACE,0BAAMC,SAAU7D,KAAKyB,aAAcqC,YAAU,EAACC,aAAa,OACxD6H,EACD,kBAAChH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ3E,QAASF,KAAKiM,aAAcnH,MAAM,WAA1C,UAGA,kBAACD,EAAA,EAAD,CAAQE,QAAQ,YAAYC,KAAK,SAASF,MAAM,WAAhD,iB,GA7MKhF,a,qBCyIVoM,G,kDAzIb,WAAYjM,GAAQ,IAAD,8BACjB,cAAMA,IAMRiG,gBAAkB,SAACyF,GACjB,EAAK/I,SAAS,CACZS,MAAM,EACNsI,gBAVe,EAcnBvF,YAAc,WACZ,EAAKxD,SAAS,CAAES,MAAM,KAbtB,EAAKxB,MAAQ,CACXwB,MAAM,EACNsI,WAAY,IAJG,E,qDAkBT,IAAD,OACD5J,EAAe/B,KAAKC,MAApB8B,WACN,OACE,yBAAKnC,UAAU,iCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,+CACb,kBAAC2H,EAAA,EAAD,KACE,yBAAK3H,UAAU,OACb,yBACEA,UAAU,6CACVC,GAAG,OAEH,kBAAC2H,EAAA,EAAD,CACE5H,UAAU,6BACV6H,MAAOC,KACPrH,MAAM,mBAGV,yBAAKT,UAAU,8BACb,kBAAC+H,EAAA,EAAD,KACE,yBAAK/H,UAAU,OACb,yBAAKA,UAAU,8BACb,kBAAC8F,EAAA,EAAD,CAAYX,QAAQ,UAAUY,cAAY,GAA1C,eAGA,kBAACD,EAAA,EAAD,CAAY9F,UAAU,gBACnBmC,EAAWC,MAEd,kBAAC0D,EAAA,EAAD,CAAYX,QAAQ,UAAUY,cAAY,GAA1C,iBAGA,yBAAK/F,UAAU,OACb,yBAAKA,UAAU,8BACb,kBAAC8F,EAAA,EAAD,CAAY9F,UAAU,gBACnBmC,EAAWE,eAGhB,yBAAKrC,UAAU,kCACb,kBAAC,IAAD,CACEM,QAAS,kBACP,EAAKgG,gBAAgB,kBAGvB,kBAACiG,GAAA,EAAD,CAAgBtB,SAAS,SACvB,kBAAC,KAAD,UAKR,kBAACnF,EAAA,EAAD,CAAYX,QAAQ,UAAUY,cAAY,GAA1C,qBAGA,yBAAK/F,UAAU,OACb,yBAAKA,UAAU,8BACb,kBAAC8F,EAAA,EAAD,CAAY9F,UAAU,gBACnBmC,EAAWG,mBAGhB,yBAAKtC,UAAU,kCACb,kBAAC,IAAD,CACEM,QAAS,kBACP,EAAKgG,gBAAgB,sBAGvB,kBAACiG,GAAA,EAAD,CAAgBtB,SAAS,SACvB,kBAAC,KAAD,WAMV,yBAAKjL,UAAU,8BACb,kBAAC8F,EAAA,EAAD,CAAYX,QAAQ,UAAUY,cAAY,GAA1C,wBAGA,yBAAK/F,UAAU,OACb,yBAAKA,UAAU,8BACb,kBAAC8F,EAAA,EAAD,CAAY9F,UAAU,gBACnBmC,EAAWI,sBAGhB,yBAAKvC,UAAU,kCACb,kBAAC,IAAD,CACEM,QAAS,kBACP,EAAKgG,gBAAgB,yBAGvB,kBAACiG,GAAA,EAAD,CAAgBtB,SAAS,SACvB,kBAAC,KAAD,UAKR,kBAACnF,EAAA,EAAD,CAAYX,QAAQ,UAAUY,cAAY,GAA1C,iBAGA,kBAACD,EAAA,EAAD,KAAa3D,EAAWH,yBAQtC,yBAAKhC,UAAU,gCAEjB,kBAAC,GAAD,CACE4D,WAAYxD,KAAK6B,MAAMwB,KACvBvB,cAAe9B,KAAKoG,YACpBrE,WAAYA,EACZ4J,WAAY3L,KAAK6B,MAAM8J,WACvBJ,qBAAsBvL,KAAKC,MAAMsL,4B,GAnIhBzL,aCHrBmK,GAAY,SAAC/C,EAAO/G,GACxB,MAAO,CACLN,GAAG,cAAD,OAAgBqH,GAClB,gBAAgB,mBAAhB,OAAoCA,GACpC3G,SAAUJ,IAIR+J,GAAW,SAACjK,GAAW,IACnBkK,EAAqClK,EAArCkK,SAAUhH,EAA2BlD,EAA3BkD,MAAO+D,EAAoBjH,EAApBiH,MAAUkD,EADT,YACmBnK,EADnB,8BAE1B,OACE,uCAAKoK,OAAQlH,IAAU+D,GAAWkD,EAAlC,CAAyCxK,UAAU,eAChDuD,IAAU+D,GAAS,6BAAMiD,KA8EjBiC,G,kDAxEb,WAAYnM,GAAQ,IAAD,8BACjB,cAAMA,IAORoM,UAAY,WAAO,IACZrK,EAAQ,EAAK/B,MAAb+B,KACLhB,EAAQ,eAAD,OAAgBgB,GAAQ,MAAO,MACnCI,MAAK,SAACC,GACc,MAAfA,EAAIC,QACN,EAAKM,SAAS,CACZb,WAAYM,EAAIf,UAIrBuB,OAAM,SAACC,GACNP,IAAaO,MAAM,CACjBL,QAAS,SACTC,YAAaI,EAAML,cArBR,EAoCnBgI,aAAe,SAACxH,EAAOyH,GACrB,EAAK9H,SAAS,CAAEO,MAAOuH,KAnCvB,EAAK7I,MAAQ,CACXsB,MAAO,EACPpB,WAAY,IAJG,E,gEA0BjB/B,KAAKqM,c,yCAGY/D,EAAWlF,GACxBpD,KAAKC,MAAMqM,oBACbtM,KAAKqM,YACLrM,KAAKC,MAAMsL,sBAAqB,M,+BAQ1B,IACFxJ,EAAe/B,KAAK6B,MAApBE,WACN,OACE,yBAAKnC,UAAU,OACb,kBAACgL,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAW,GACnC,kBAACC,EAAA,EAAD,CACE5H,MAAOnD,KAAK6B,MAAMsB,MAClBmB,SAAUtE,KAAKyK,aAEf7K,UAAU,YACVoL,eAAe,UACfC,UAAU,WAEV,kBAACC,EAAA,EAAD,eAAMtL,UAAU,WAAWsE,MAAM,UAAa+F,GAAU,GAAG,KAC3D,kBAACiB,EAAA,EAAD,eAAMtL,UAAU,WAAWsE,MAAM,cAAiB+F,GAAU,GAAG,KAC/D,kBAACiB,EAAA,EAAD,eAAMtL,UAAU,WAAWsE,MAAM,WAAc+F,GAAU,GAAG,OAGhE,kBAAC,GAAD,CAAU9G,MAAOnD,KAAK6B,MAAMsB,MAAO+D,MAAO,GACxC,kBAAC,GAAD,CACEnF,WAAYA,EACZwJ,qBAAsBvL,KAAKC,MAAMsL,wBAGrC,kBAAC,GAAD,CAAUpI,MAAOnD,KAAK6B,MAAMsB,MAAO+D,MAAO,IAC1C,kBAAC,GAAD,CAAU/D,MAAOnD,KAAK6B,MAAMsB,MAAO+D,MAAO,S,GAlEhBpH,aCgBnByM,G,kDArCb,WAAYtM,GAAQ,IAAD,8BACjB,cAAMA,IAMRsL,qBAAuB,SAACpI,GACtB,EAAKP,SAAS,CACZ0J,kBAAmBnJ,KAPrB,EAAKtB,MAAQ,CACXyK,mBAAmB,GAHJ,E,qDAaT,IAAD,EACoBtM,KAAKC,MAAMmL,MAAMC,OAAvC/H,EADE,EACFA,aAActB,EADZ,EACYA,KACZmD,EAAWnF,KAAKC,MAAhBkF,QACP,OACE,yBAAKvF,UAAU,iCACb,yBAAKA,UAAU,MAAMC,GAAG,QACtB,kBAAC,GAAD,CACEsF,QAASA,EACTnD,KAAMA,EACNsB,aAAcA,EACdiI,qBAAsBvL,KAAKuL,wBAG/B,kBAAC,GAAD,CACEvJ,KAAMA,EACNsB,aAAcA,EACdgJ,kBAAmBtM,KAAK6B,MAAMyK,kBAC9Bf,qBAAsBvL,KAAKuL,4B,GA/BNzL,aCwGhB0M,G,kDAhGb,WAAYvM,GAAQ,IAAD,8BACjB,cAAMA,IAORwB,aAAe,SAACC,GACdA,EAAEC,iBADkB,IAEfC,EAAoB,EAAKC,MAAzBD,iBACoB,KAArBA,EAQJZ,EAAQ,gBAAiB,OADH,CAACY,qBAEpBQ,MAAK,SAACC,GACc,MAAfA,EAAIC,SACNC,IAAaC,QAAQ,CACnBC,QAAS,UACTC,YAAa,oCAEf,EAAKzC,MAAMwF,iCAAgC,GAC3C,EAAK7C,SAAS,CAAChB,iBAAkB,SAGpCiB,OAAM,SAACC,GACCA,EAAMC,SAASzB,KACfiB,IAAaO,MAAM,CACjBL,QAAS,QACTC,YAAaI,EAAMC,SAASzB,KAAKmB,UAGnCF,IAAaO,MAAM,CACjBL,QAAS,QACTC,YAAaI,EAAML,aA3B9BF,IAAaO,MAAM,CACjBL,QAAS,SACTC,YAAa,2CAdA,EAiDnB+J,qBAAuB,SAACxJ,GACtB,EAAKL,SAAS,CAAChB,iBAAkBqB,EAAMC,OAAOC,SAhD9C,EAAKtB,MAAQ,CACXwB,MAAM,EACNzB,iBAAkB,IAJH,E,qDAuDjB,OACE,6BACE,kBAAC2B,EAAA,EAAD,CACEF,KAAMrD,KAAKC,MAAMuD,WACjBC,QAASzD,KAAKC,MAAM6B,cACpB4B,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAa9D,GAAG,qBAAhB,wBACA,kBAAC+D,EAAA,EAAD,KACE,0BAAMC,SAAU7D,KAAKyB,aAAcqC,YAAU,EAACC,aAAa,OACzD,kBAACC,EAAA,EAAD,CACEC,OAAO,QACPpE,GAAG,mBACHmC,KAAK,mBACLkC,MAAM,qBACNC,WAAS,EACTC,WAAS,EACTC,UAAQ,EACRC,SAAUtE,KAAKyM,uBAEjB,kBAAC7H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQ3E,QAASF,KAAKC,MAAM6B,cAAegD,MAAM,WAAjD,UAGA,kBAACD,EAAA,EAAD,CACE3E,QAASF,KAAKC,MAAM6B,cACpBiD,QAAQ,YACRC,KAAK,SACLF,MAAM,WAJR,iB,GAhFiBhF,aC+GlB4M,G,kDA5Gb,WAAYzM,GAAQ,IAAD,8BACjB,cAAMA,IAOR4F,oBAAsB,WACpB,EAAKjD,SAAS,CAAEkD,YAAY,KATX,EAYnBC,oBAAsB,WAEpB,EAAK9F,MAAMwF,iCAAgC,IAd1B,EAiBnBS,gBAAkB,WAChB,EAAKtD,SAAS,CAAEuD,SAAS,KAlBR,EAqBnBC,YAAc,WACZ,EAAKxD,SAAS,CAAEuD,SAAS,KAtBR,EAyBnBjB,kBAAoB,WAClB,EAAKtC,SAAS,CAAEkD,YAAY,KA1BX,EA6BnBO,eAAiB,CACf,CACEC,SAAU,aACVC,YAAa,CACX,CACE1G,GAAI,EACJO,KAAM,kBAAC,IAAD,MACND,SAAS,EACTD,QAAS,EAAKgG,gBACd7F,MAAO,wBAET,CACER,GAAI,EACJO,KAAM,kBAAC,IAAD,MACND,SAAS,EACTD,QAAS,EAAK2F,oBACdxF,MAAO,6BAET,CACER,GAAI,EACJO,KAAM,kBAAC,IAAD,MACND,SAAS,EACTD,QAAS,EAAK6F,oBACd1F,MAAO,cApDI,EA0DnBqG,YAAc,SAACzD,GACbA,EAAMtB,iBACNqE,QAAQW,KAAK,8BA1Db,EAAK9E,MAAQ,CACXsE,SAAS,EACTL,YAAY,GAJG,E,qDAgEjB,OACE,yBAAKlG,UAAU,iCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mCACb,kBAACiH,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,CAAkBC,SAAS,UACtCC,aAAW,cAEX,kBAAC1G,EAAA,EAAD,CAASD,MAAM,WACb,kBAACqF,EAAA,EAAD,CAAYZ,MAAM,cAAclF,UAAU,QAA1C,oBAKJ,wBAAIC,GAAG,eAAP,mBAEF,yBAAKD,UAAU,+CACZI,KAAKqG,eAAe,GAAGE,YAAY/B,KAAI,SAAC2C,EAAYD,GAAb,OACtC,kBAAC,EAAD,CACEvC,IAAKuC,EACL9G,KAAM+G,EAAW/G,KACjBD,QAASgH,EAAWhH,QACpBD,QAASiH,EAAWjH,QACpBG,MAAO8G,EAAW9G,WAGtB,kBAAC,GAAD,CACEmD,WAAYxD,KAAK6B,MAAMsE,QACvBrE,cAAe9B,KAAKoG,YACpBX,gCAAiCzF,KAAKC,MAAMwF,kCAE9C,kBAAC,EAAD,CACFpF,MAAM,iBACNmD,WAAYxD,KAAK6B,MAAMiE,WACvBZ,kBAAmBlF,KAAKkF,kBACxBO,gCAAiCzF,KAAKC,MAAMwF,yC,GApGvB3F,a,qBC+BhB6M,G,uKAlCH,IACAC,EAAqB5M,KAAKC,MAA1B2M,iBACR,OACE,6BACGA,GACC,kBAAC,IAAD,CAAMnG,GAAE,WAAMmG,EAAiBhL,iBAAvB,aACN,kBAAC2F,EAAA,EAAD,CAAMxC,QAAQ,WAAWnF,UAAU,YACjC,kBAAC4H,EAAA,EAAD,CACE5H,UAAU,YACV6H,MAAOoF,KACPxM,MAAM,kBAER,yBAAKT,UAAU,cACb,kBAAC+H,EAAA,EAAD,CAAa/H,UAAU,YACrB,kBAACU,EAAA,EAAD,CAASD,MAAOuM,EAAiBhL,kBAC/B,kBAAC8D,EAAA,EAAD,CAAYX,QAAQ,KAAKY,cAAY,GAClCiH,EAAiBhL,mBAGtB,kBAACtB,EAAA,EAAD,CAASD,MAAK,UAAMuM,EAAiBE,YAAvB,aACZ,kBAACpH,EAAA,EAAD,CAAYX,QAAQ,QAAQY,cAAY,GACrCiH,EAAiBE,YADpB,sB,GArBWhN,aCkGhBiN,G,kDArGb,WAAY9M,GAAQ,IAAD,8BACjB,cAAMA,IA4BR4H,iBAAmB,SAACC,GAClB,EAAKlF,SAAS,CAAEkF,KAAMA,IACtB,IAAIC,EAAQ,EAAKlG,MAAMmG,iBACvB,EAAK/H,MAAMgI,WAAWH,EAAO,EAAGC,IAhCf,EAmCnBG,uBAAyB,SAAC/E,GACxB,EAAKP,SAAS,CAAEoF,iBAAkB7E,IAClC,EAAKP,SAAS,CAAEkF,KAAM,IACtB,EAAK7H,MAAMgI,WAAW,EAAG9E,IApCzB,EAAKtB,MAAQ,CACXmL,iBAAkB,GAClBhF,iBAAkB,EAClBI,SAAU,EACVN,KAAM,GANS,E,gEAWjB9H,KAAK4C,SAAS,CACZoK,iBAAkBhN,KAAKC,MAAM+M,iBAC7B5E,SAAUpI,KAAKC,MAAMoI,U,yCAINC,EAAWlF,GAE1BmF,KAAKC,UAAUxI,KAAKC,MAAM+M,oBAC1BzE,KAAKC,UAAUF,EAAU0E,mBAEzBhN,KAAK4C,SAAS,CACZoK,iBAAkBhN,KAAKC,MAAM+M,iBAC7B5E,SAAUpI,KAAKC,MAAMoI,U,+BAiBjB,IAAD,SAC8BrI,KAAK6B,MAApCmL,EADC,EACDA,iBAAkB5E,EADjB,EACiBA,SACxBpC,QAAQC,IAAI,SAAUjG,KAAKC,MAAMoI,OACjC,IAAM4E,EAAsBD,GAAoBA,EAAiBpG,OAAS,EAC1E,OACE,yBAAKhH,UAAU,iCACZqN,GACC,kBAAC,IAAD,CACEvE,QAAS,CACP,CACEC,MAAO,aACPC,OAAQ,SAACC,GACP,IAAIvB,EAAS,yCAgBb,OAdEuB,EAAQ+D,kBACR/D,EAAQ+D,iBAAiBhG,OAAS,IAElCU,EAASuB,EAAQ+D,iBAAiBpI,KAChC,SAAClB,EAAc4D,GAAf,OACE,yBACEvC,IAAKuC,EACLtH,UAAU,6CAEV,kBAAC,GAAD,CAAkBgN,iBAAkBtJ,SAKrC,yBAAK1D,UAAU,kBAAf,IAAkC0H,EAAlC,QAIbhG,KAAM,CAAC,CAAEsL,iBAAkBI,IAC3BjE,QAAS,CACPC,SAAS,GAEXC,WAAY,CACVC,WAAY,SAACjJ,GAAD,OACV,kBAACkJ,GAAA,EAAD,CAEEC,UAAU,MACVC,iBAAiB,kBACjBC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,YAAa,EAAK1H,MAAMmG,iBACxBwB,MAAOpB,EACPN,KAAM,EAAKjG,MAAMiG,KACjB2B,aAAc,SAAC/H,EAAGoG,GAAJ,OAAa,EAAKD,iBAAiBC,IACjD4B,oBAAqB,SAACzG,GACpB,EAAKiF,uBAAuBjF,EAAMC,OAAOC,mB,GA1F9BrD,aCKzBmK,GAAY,SAAC/C,EAAO/G,GACxB,MAAO,CACLN,GAAG,cAAD,OAAgBqH,GAClB,gBAAgB,mBAAhB,OAAoCA,GACpC3G,SAAUJ,IAIR+J,GAAW,SAACjK,GAAW,IACnBkK,EAAqClK,EAArCkK,SAAUhH,EAA2BlD,EAA3BkD,MAAO+D,EAAoBjH,EAApBiH,MAAUkD,EADT,YACmBnK,EADnB,8BAE1B,OACE,uCAAKoK,OAAQlH,IAAU+D,GAAWkD,EAAlC,CAAyCxK,UAAU,eAChDuD,IAAU+D,GAAS,6BAAMiD,KA0GjB+C,G,kDApGb,WAAYjN,GAAQ,IAAD,8BACjB,cAAMA,IAURkN,oBAAsB,SAACrF,EAAMC,GAC3B/G,EAAQ,sBAAD,OAAuB8G,EAAvB,kBAAqCC,GAAS,MAAO,MACzD3F,MAAK,SAACC,GACc,MAAfA,EAAIC,SACN0D,QAAQC,IAAI,mBAAoB5D,EAAIf,MACpC,EAAKsB,SAAS,CACZoK,iBAAkB3K,EAAIf,KAAK8L,gBAC3B/E,MAAOhG,EAAIf,KAAK+G,YAIrBxF,OAAM,SAACC,GACNP,IAAaO,MAAM,CACjBL,QAAS,SACTC,YAAaI,EAAML,cAzBR,EA4CnBwF,WAAa,SAACH,EAAMC,GAClB,EAAKnF,SAAS,CACZkF,KAAMA,EACNC,MAAOA,IAET,EAAKoF,oBAAoBrF,EAAMC,IAjDd,EAoDnB0C,aAAe,SAACxH,EAAOyH,GACrB,EAAK9H,SAAS,CAAEO,MAAOuH,KAnDvB,EAAK7I,MAAQ,CACXsB,MAAO,EACP6J,iBAAkB,GAClB3E,MAAM,EACNP,KAAK,EACLC,MAAO,GAPQ,E,gEA8BC,MAEE/H,KAAK6B,MAApBiG,EAFa,EAEbA,KAAMC,EAFO,EAEPA,MACX/H,KAAKmN,oBAAoBrF,EAAMC,K,yCAGdO,EAAWlF,GAC5B,GAAIpD,KAAKC,MAAMoN,wBAAyB,CAAC,IAAD,EAClBrN,KAAK6B,MAApBiG,EADiC,EACjCA,KAAMC,EAD2B,EAC3BA,MACX/H,KAAKmN,oBAAoBrF,EAAMC,GAC/B/H,KAAKC,MAAMwF,iCAAgC,M,+BAgBrC,IACFuH,EAAqBhN,KAAK6B,MAA1BmL,iBACD3E,EAASrI,KAAK6B,MAAdwG,MAEL,OADArC,QAAQC,IAAI,UAAWoC,GAErB,yBAAKzI,UAAU,OACb,kBAACgL,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAW,GACnC,kBAACC,EAAA,EAAD,CACE5H,MAAOnD,KAAK6B,MAAMsB,MAClBmB,SAAUtE,KAAKyK,aACfzD,aAAW,YAEXgE,eAAe,UACfC,UAAU,UACVrL,UAAU,aAEV,kBAACsL,EAAA,EAAD,eACEtL,UAAU,WACVsE,MAAM,kBACF+F,GAAU,GAAG,KAEnB,kBAACiB,EAAA,EAAD,eACEtL,UAAU,WACVsE,MAAM,cACF+F,GAAU,GAAG,KAEnB,kBAACiB,EAAA,EAAD,eACEtL,UAAU,WACVsE,MAAM,WACF+F,GAAU,GAAG,OAIvB,kBAAC,GAAD,CAAU9G,MAAOnD,KAAK6B,MAAMsB,MAAO+D,MAAO,GACxC,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkBe,WAAYjI,KAAKiI,WAAY+E,iBAAkBA,EAAkB3E,MAASA,KAE9F,kBAAC,GAAD,CAAUlF,MAAOnD,KAAK6B,MAAMsB,MAAO+D,MAAO,IAC1C,kBAAC,GAAD,CAAU/D,MAAOnD,KAAK6B,MAAMsB,MAAO+D,MAAO,S,GA/FhBpH,aCOnBwN,G,kDA7Bb,WAAYrN,GAAO,IAAD,8BAChB,cAAMA,IAMRwF,gCAAkC,SAACtC,GACjC,EAAKP,SAAS,CACVyK,wBAAyBlK,KAP7B,EAAKtB,MAAQ,CACXwL,yBAAyB,GAHX,E,qDAehB,OAEE,yBAAKzN,UAAU,iCACb,yBAAKA,UAAU,MAAMC,GAAG,QACtB,kBAAC,GAAD,CAAkB4F,gCAAiCzF,KAAKyF,mCAE1D,kBAAC,GAAD,CACA4H,wBAAyBrN,KAAK6B,MAAMwL,wBACpC5H,gCAAiCzF,KAAKyF,uC,GAxBf3F,aCQhByN,G,uKARX,OACE,yBAAK3N,UAAU,iCACb,mD,GAJmBE,a,UCoCZ0N,G,uKAnBX,OAHAjL,IAAakL,OAAO,CAClBC,SAAU,IAGV,kBAAC,IAAD,KACE,yBAAK9N,UAAU,mBACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,OACb,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO+N,KAAK,IAAIC,OAAK,EAACxE,UAAWkE,KACjC,kBAAC,KAAD,CAAOK,KAAK,yBAAyBC,OAAK,EAACxE,UAAW+B,KACtD,kBAAC,KAAD,CAAOwC,KAAK,+BAA+BC,OAAK,EAACxE,UAAWmD,KAC5D,kBAAC,KAAD,CAAOnD,UAAWmE,a,GAddzN,aCFE+N,QACW,cAA7BpN,OAAOC,SAASE,UAEe,UAA7BH,OAAOC,SAASE,UAEhBH,OAAOC,SAASE,SAASwK,MACvB,2DCXN0C,IAASlF,OACP,kBAAC,IAAMmF,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhM,MAAK,SAAAiM,GACJA,EAAaC,gBAEdzL,OAAM,SAAAC,GACLkD,QAAQlD,MAAMA,EAAML,c","file":"static/js/main.a33f6824.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clound_icon.54efc303.png\";","module.exports = __webpack_public_path__ + \"static/media/connection.2d38da41.png\";","import React, { Component } from 'react';\n\nclass Header extends Component{\n  render() {\n    return (\n      <div className=\"row\" id=\"header\">\n          Device Manager\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from \"react\";\r\nimport MatIconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nclass IconButton extends React.Component {\r\n  render() {\r\n    const {\r\n      onClick,\r\n      disable = false, // set default value neu khong truyen props disabled\r\n      icon,\r\n      title,\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Tooltip title={title}>\r\n          <MatIconButton onClick={onClick} disabled={disable}>\r\n            {icon}\r\n          </MatIconButton>\r\n        </Tooltip>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IconButton;\r\n","// export const API_URL = 'http://192.168.95.132:8181/cxf/v1';\n\n// export const API_URL = window.location.protocol + '//' + window.location.hostname + ':' + window.location.port\nexport const API_URL = window.location.protocol + '//' + window.location.hostname + ':8181/cxf/v1';","import axios from 'axios';\r\nimport * as Config from './../constants/Config';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nconst axiosIntance = axios.create({});\r\n\r\nexport default function callApi(endpoint, method = 'GET', body){\r\n    let ax = axiosIntance({\r\n        method: method,\r\n        url : `/cxf/v1/${endpoint}`,\r\n        data : body\r\n    });\r\n    return trackPromise(ax);\r\n    \r\n};","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport callApi from \"../util/ApiCaller\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass DialogDevice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      deviceInfo: {},\r\n      deviceHolderName: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({deviceHolderName: this.props.deviceHolder});\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {deviceHolderName} = this.state;\r\n    this.props.onCloseDialog();\r\n    const {\r\n      name,\r\n      hardwareType,\r\n      interfaceVersion,\r\n      connectionMechanism,\r\n    } = this.state.deviceInfo;\r\n    const deviceInfo = {\r\n      name,\r\n      hardwareType,\r\n      interfaceVersion,\r\n      connectionMechanism,\r\n      deviceHolderName,\r\n    };\r\n    const checkInsert =\r\n      name &&\r\n      hardwareType &&\r\n      interfaceVersion &&\r\n      connectionMechanism &&\r\n      deviceHolderName;\r\n    if (!checkInsert) {\r\n      notification.error({\r\n        message: \"Error\",\r\n        description: \"Mandatory attributes (hwType, version or connectionMechanism) are missing\",\r\n      });\r\n      return;\r\n    }\r\n    callApi(\"device\", \"POST\", deviceInfo)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          notification.success({\r\n            message: \"Success\",\r\n            description: \"Add device successfully!\",\r\n          });\r\n          this.props.setNeedRefreshTabMenuState(true);\r\n          this.setState({ deviceInfo: {}});\r\n        }\r\n      })\r\n      .catch((error) => {\r\n            if(error.response.data) {\r\n                           notification.error({\r\n                             message: \"Error\",\r\n                             description: error.response.data.message,\r\n                           })\r\n                         } else {\r\n                           notification.error({\r\n                             message: \"Error\",\r\n                             description: error.message,\r\n                           })\r\n                         }\r\n//        notification.error({\r\n//          message: \"Error \",\r\n//          description: error.message,\r\n//        });\r\n      });\r\n  };\r\n\r\n  onChangeDiviceInfo = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState((prevState) => ({\r\n      deviceInfo: {\r\n        ...prevState.deviceInfo,\r\n        [name]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const connectionMechanismList = [\r\n      { value: \"Call home\" },\r\n      { value: \"Non Callhome\" },\r\n    ];\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.openDialog}\r\n          onClose={this.props.onCloseDialog}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Create device</DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"Device name\"\r\n                fullWidth\r\n                autoFocus\r\n                required\r\n                onChange={this.onChangeDiviceInfo}\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"hardwareType\"\r\n                name=\"hardwareType\"\r\n                label=\"Hardware type\"\r\n                fullWidth\r\n                required\r\n                onChange={this.onChangeDiviceInfo}\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"interfaceVersion\"\r\n                name=\"interfaceVersion\"\r\n                label=\"Interface version\"\r\n                fullWidth\r\n                required\r\n                onChange={this.onChangeDiviceInfo}\r\n              />\r\n              <TextField\r\n                id=\"connectionMechanism\"\r\n                name=\"connectionMechanism\"\r\n                margin=\"dense\"\r\n                select\r\n                label=\"Connection mechanism\"\r\n                onChange={this.onChangeDiviceInfo}\r\n                required\r\n                fullWidth\r\n              >\r\n                {connectionMechanismList.map((option) => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                    {option.value}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n                <TextField\r\n                  id=\"deviceHolder\"\r\n                  name=\"deviceHolderName\"\r\n                  margin=\"dense\"\r\n                  label=\"Device holder\"\r\n                  value={this.props.deviceHolder}\r\n                  required\r\n                  disabled\r\n                  fullWidth\r\n                >\r\n                 \r\n                </TextField>\r\n\r\n              <DialogActions>\r\n                <Button onClick={this.props.onCloseDialog} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                >\r\n                  Save\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogDevice;\r\n","import React, { Component } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport callApi from \"../util/ApiCaller\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nclass DialogDelete extends Component {\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.handleCloseDelete();\r\n    const { history, param, title, name, deviceHolder} = this.props;\r\n    if(title === \"devices\") {\r\n      this.deleteDevices(param, history);\r\n    }\r\n    if(title === \"device\") {\r\n      this.deleteDeviceItem(name, history, deviceHolder)\r\n    }\r\n    if(title === \"device holders\") {\r\n      this.deleteDeviceHolders();\r\n    }\r\n    \r\n  };\r\n\r\n  deleteDevices = (param, history) => {\r\n    callApi(`device?deviceHolderName=${param}`, \"DELETE\", null)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          notification.success({\r\n            message: \"Success\",\r\n            description: \"Delete all devices successfully!\",\r\n          });\r\n          this.props.setNeedRefreshTabMenuState(true);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n          message: \"Error \",\r\n          description: error.message,\r\n        });\r\n      });\r\n  }\r\n\r\n  deleteDeviceItem = (name, history, deviceHolder) => {\r\n    callApi(`device/${name}`, \"DELETE\", null)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          notification.success({\r\n            message: \"Success\",\r\n            description: \"Delete device successfully!\",\r\n          });\r\n//          this.props.setNeedRefreshDevice(true);\r\n          history.push(`/${deviceHolder}/devices`);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n          message: \"Error \",\r\n          description: error.message,\r\n        });\r\n      });\r\n  }\r\n\r\n  deleteDeviceHolders = () => {\r\n    callApi(\"device-holder\", \"DELETE\", null)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          notification.success({\r\n            message: \"Success\",\r\n            description: \"Delete all device holder successfully!\",\r\n          });\r\n          this.props.setNeedRefreshDeviceHolderState(true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n          message: \"Error \",\r\n          description: error.message,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {openDialog} = this.props;\r\n    return (\r\n      <div>\r\n          {openDialog && (\r\n            <Dialog\r\n            open={this.props.openDialog}\r\n            onClose={this.props.handleCloseDelete}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Delete {this.props.title}</DialogTitle>\r\n            <DialogContent>\r\n              <form onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\r\n          <Typography variant=\"body2\" gutterBottom>Are you sure you want to delete this {this.props.title}?</Typography>\r\n                <DialogActions>\r\n                  <Button onClick={this.props.handleCloseDelete} color=\"primary\">\r\n                    No\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Yes\r\n                  </Button>\r\n                </DialogActions>\r\n              </form>\r\n            </DialogContent>\r\n          </Dialog>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogDelete;\r\n","import React, { Component } from \"react\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport IconButtonCommon from \"./common/button/IconButton\";\nimport \"../common.css\";\nimport DialogDevice from \"./DialogDevice.js\";\nimport DialogDelete from \"./DialogDelete.js\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Link } from \"react-router-dom\";\n\nclass PathDevices extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openAdd: false,\n      openDelete: false,\n    };\n  }\n\n  onClickDeleteButton = () => {\n    this.setState({ openDelete: true });\n  };\n\n  onClickReloadButton = () => {\n    console.log(\"perform click reload buton\");\n    this.props.setNeedRefreshTabMenuState(true);\n  };\n\n  handleClickOpen = () => {\n    this.setState({ openAdd: true });\n  };\n\n  handleClose = () => {\n    this.setState({ openAdd: false });\n  };\n\n  handleCloseDelete = () => {\n    this.setState({ openDelete: false });\n  };\n\n  pathIconButton = [\n    {\n      pathName: \"Breadcrumb\",\n      iconButtons: [\n        {\n          id: 1,\n          icon: <AddCircleOutlineIcon />,\n          disable: false,\n          onClick: this.handleClickOpen,\n          title: \"Create device\",\n        },\n        {\n          id: 2,\n          icon: <DeleteIcon />,\n          disable: false,\n          onClick: this.onClickDeleteButton,\n          title: \"Delete all devices\",\n        },\n        {\n          id: 3,\n          icon: <ReplayIcon />,\n          disable: false,\n          onClick: this.onClickReloadButton,\n          title: \"Refresh\",\n        },\n      ],\n    },\n  ];\n\n  pathList = [\n    {\n      name: \"Device holders\",\n      color: \"inherit\",\n      to: \"/\",\n      onClick: this.handleClick,\n      className: \"link\",\n    },\n    {\n      name: this.props.param,\n      color: \"textPrimary\",\n      className: \"link\",\n    },\n  ];\n\n  handleClick = (event) => {\n    event.preventDefault();\n    console.info(\"You clicked a breadcrumb.\");\n  };\n\n  render() {\n    const length = this.pathList.length;\n    return (\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-8 col-sm-8 path\">\n            <Breadcrumbs\n              separator={<NavigateNextIcon fontSize=\"small\" />}\n              aria-label=\"breadcrumb\"\n            >\n               {this.pathList.map((element, index) =>\n                length === index + 1 ? (\n                  <Tooltip key={index} title={element.name}>\n                    <Typography\n                      color={element.color}\n                      className={element.className}\n                    >\n                      {element.name}\n                    </Typography>\n                  </Tooltip>\n                ) : (\n                  <Tooltip key={index} title={element.name}>\n                    <Link\n                      color={element.color}\n                      to={element.to}\n                      onClick={element.onClick}\n                      className={element.className}\n                    >\n                      {element.name}\n                    </Link>\n                  </Tooltip>\n                )\n              )}\n            </Breadcrumbs>\n            <h3 id=\"currentName\">{this.props.param}</h3>\n          </div>\n          <div className=\"col-lg-4 col-md-4 col-sm-4 content-flex-end\">\n            {this.pathIconButton[0].iconButtons.map((iconButton, index) => (\n              <IconButtonCommon\n                key={index}\n                icon={iconButton.icon}\n                disable={iconButton.disable}\n                onClick={iconButton.onClick}\n                title={iconButton.title}\n              />\n            ))}\n            <DialogDevice\n              deviceHolder={this.props.param}\n              openDialog={this.state.openAdd}\n              onCloseDialog={this.handleClose}\n              setNeedRefreshTabMenuState={this.props.setNeedRefreshTabMenuState}\n            />\n\n            <DialogDelete\n              title=\"devices\"\n              param={this.props.param}\n              history={this.props.history}\n              deviceHolder={this.props.param}\n              openDialog={this.state.openDelete}\n              handleCloseDelete={this.handleCloseDelete}\n              setNeedRefreshTabMenuState={this.props.setNeedRefreshTabMenuState}\n            />\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PathDevices;\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport cloud from \"./../images/clound_icon.png\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nclass DeviceItem extends Component {\r\n  render() {\r\n    const { deviceItem } = this.props;\r\n    const result = deviceItem.hardwareType + \" \" + deviceItem.interfaceVersion;\r\n    return (\r\n      <div>\r\n        {deviceItem && (\r\n          <Link to={`/${deviceItem.deviceHolderName}/devices/${deviceItem.name}`}>\r\n            <Card variant=\"outlined\" className=\"cardRoot\">\r\n              <CardMedia className=\"cardCover\" image={cloud} title=\"device\" />\r\n              <div className=\"cardDetail\">\r\n                <CardContent className=\"cardText\">\r\n                  <Tooltip title={deviceItem.name}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {deviceItem.name}\r\n                    </Typography>\r\n                  </Tooltip>\r\n                  <Tooltip title={result}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      {deviceItem.hardwareType} {deviceItem.interfaceVersion}\r\n                    </Typography>\r\n                  </Tooltip>\r\n                </CardContent>\r\n              </div>\r\n            </Card>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeviceItem;\r\n","import React, { Component } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport DeviceItem from \"./DeviceItem.js\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nclass DeviceList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deviceList: [],\r\n      numberRowPerPage: 8,\r\n      totalRow: 0,\r\n      page: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      deviceList: this.props.deviceList,\r\n      totalRow: this.props.total,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      JSON.stringify(this.props.deviceList) !==\r\n      JSON.stringify(prevProps.deviceList)\r\n    ) {\r\n      this.setState({\r\n        deviceList: this.props.deviceList,\r\n        totalRow: this.props.total,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangePage = (page) => {\r\n    this.setState({ page: page });\r\n    let limit = this.state.numberRowPerPage;\r\n    this.props.changePage(page + 1, limit);\r\n  };\r\n\r\n  handleChangeRowPerPage = (value) => {\r\n    this.setState({ numberRowPerPage: value });\r\n    this.setState({ page: 0 });\r\n    this.props.changePage(1, value);\r\n  };\r\n\r\n  render() {\r\n    let { deviceList, totalRow } = this.state;\r\n    const hasDeviceList = deviceList && deviceList.length > 0;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        {hasDeviceList && (\r\n          <MaterialTable\r\n            columns={[\r\n              {\r\n                field: \"deviceItem\",\r\n                render: (rowData) => {\r\n                  let result = <> </>;\r\n                  if (rowData.deviceItem && rowData.deviceItem.length > 0) {\r\n                    result = rowData.deviceItem.map((device, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"col-lg-3 col-md-3 col-sm-3 pr-1 pl-1 pb-3\"\r\n                      >\r\n                        <DeviceItem deviceItem={device} />\r\n                      </div>\r\n                    ));\r\n                  }\r\n                  return <div className=\"dislay-flexbox\"> {result} </div>;\r\n                },\r\n              },\r\n            ]}\r\n            data={[{ deviceItem: deviceList }]}\r\n            options={{\r\n              toolbar: false,\r\n            }}\r\n            components={{\r\n              Pagination: (props) => (\r\n                <TablePagination\r\n                  // {...props}\r\n                  component=\"div\"\r\n                  labelRowsPerPage=\"Items per page:\"\r\n                  rowsPerPageOptions={[8, 16, 24]}\r\n                  rowsPerPage={this.state.numberRowPerPage}\r\n                  count={totalRow}\r\n                  page={this.state.page}\r\n                  onChangePage={(e, page) => this.handleChangePage(page)}\r\n                  onChangeRowsPerPage={(event) => {\r\n                    this.handleChangeRowPerPage(event.target.value);\r\n                  }}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeviceList;\r\n","import React from \"react\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\n\r\nconst LoadingSpinerComponent = (props) => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n  return (\r\n    <LoadingOverlay\r\n      active={promiseInProgress}\r\n      spinner={<BeatLoader size={14} margin={2} color={'#25C6DA'} />}\r\n    ></LoadingOverlay>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinerComponent;\r\n","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport DeviceList from \"./DeviceList.js\";\r\nimport callApi from \"../util/ApiCaller.js\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport LoadingSpinerComponent from \"./common/loading/loading.js\";\r\n\r\nconst a11yProps = (index, disable) => {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n    disabled: disable,\r\n  };\r\n};\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div hidden={value !== index} {...other} className=\"tabContent\">\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TabMenuDevices extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n      deviceList: [],\r\n      deviceHolder: \"\",\r\n      total:0,\r\n      page:1,\r\n      limit: 8,\r\n    };\r\n  }\r\n\r\n  getDiviceList = (deviceHolder, page, limit) => {\r\n    callApi(`device/${deviceHolder}?page=${page}&limit=${limit}`, \"GET\", null)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            deviceList: res.data.deviceVOS,\r\n            total: res.data.total,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n          message: \"Error \",\r\n          description: \"aaaa \" + error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    //send request get all devices\r\n    this.setState({ deviceHolder: this.props.param });\r\n    let {page, limit} = this.state;\r\n    this.getDiviceList(this.props.param, page, limit);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.needRefreshTabMenu) {\r\n      let {page, limit} = this.state;\r\n      this.getDiviceList(this.props.param, page, limit);\r\n      this.props.setNeedRefreshTabMenuState(false);\r\n    }\r\n  }\r\n\r\n  changePage = (page, limit) => {\r\n    this.setState({\r\n      page: page,\r\n      limit: limit,\r\n    });\r\n    this.getDiviceList(this.props.param, page, limit);\r\n  }\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue });\r\n  };\r\n\r\n  render() {\r\n    let { deviceList, total } = this.state;\r\n    const { param } = this.props;\r\n    return (\r\n      <div className=\"row\">\r\n        <AppBar position=\"static\" elevation={0}>\r\n          <Tabs\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            aria-label=\"tabs menu\"\r\n            // TabIndicatorProps={{ style: { background: \"#00C9FF\"}}}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            className=\"tabHeader\"\r\n          >\r\n            <Tab\r\n              className=\"tabTitle\"\r\n              label=\"DEVICES\"\r\n              {...a11yProps(0, false)}\r\n            />\r\n            <Tab\r\n              className=\"tabTitle\"\r\n              label=\"EXTENSIONS\"\r\n              {...a11yProps(1, false)}\r\n            />\r\n            <Tab\r\n              className=\"tabTitle\"\r\n              label=\"LOGGING\"\r\n              {...a11yProps(2, false)}\r\n            />\r\n          </Tabs>\r\n        </AppBar>\r\n        {param && (\r\n          <TabPanel value={this.state.value} index={0}>\r\n            <LoadingSpinerComponent />\r\n            <DeviceList changePage={this.changePage} param={param} deviceList={deviceList} total={total} />\r\n          </TabPanel>\r\n        )}\r\n        <TabPanel value={this.state.value} index={1}></TabPanel>\r\n        <TabPanel value={this.state.value} index={2}></TabPanel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabMenuDevices;\r\n","import React, { Component } from \"react\";\r\nimport PathDevices from \"../components/PathDevices.js\";\r\nimport TabMenuDevices from \"../components/TabMenuDevices.js\";\r\n\r\nclass DevicesPage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      needRefreshTabMenu: false,\r\n    }\r\n  }\r\n\r\n  setNeedRefreshTabMenuState = (value) => {\r\n    this.setState({\r\n      needRefreshTabMenu: value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let param = this.props.match.params.deviceHolder;\r\n    const {history} = this.props;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <div className=\"row\" id=\"tool\">\r\n          <PathDevices \r\n          history={history}\r\n          param={param} \r\n          setNeedRefreshTabMenuState={this.setNeedRefreshTabMenuState} />\r\n        </div>\r\n        <TabMenuDevices\r\n        param={param}\r\n        needRefreshTabMenu={this.state.needRefreshTabMenu}\r\n        setNeedRefreshTabMenuState={this.setNeedRefreshTabMenuState}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DevicesPage;\r\n","import React, { Component } from \"react\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport IconButtonCommon from \"./common/button/IconButton\";\r\nimport \"../common.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogDelete from \"./DialogDelete.js\";\r\n\r\nclass PathDeviceDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      openDelete: false,\r\n    };\r\n  }\r\n\r\n  onClickDeleteButton = () => {\r\n    this.setState({ openDelete: true });\r\n  };\r\n\r\n  onClickReloadButton = () => {\r\n    this.props.setNeedRefreshDevice(true);\r\n  };\r\n\r\n  handleCloseDelete = () => {\r\n    this.setState({ openDelete: false });\r\n  };\r\n\r\n  pathIconButton = () => [\r\n    {\r\n      pathName: \"Breadcrumb\",\r\n      iconButtons: [\r\n        {\r\n          id: 1,\r\n          icon: <DeleteIcon />,\r\n          disable: false,\r\n          onClick: this.onClickDeleteButton,\r\n          title: \"Delete device\",\r\n        },\r\n        {\r\n          id: 2,\r\n          icon: <ReplayIcon />,\r\n          disable: false,\r\n          onClick: this.onClickReloadButton,\r\n          title: \"Refresh\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  pathList = [\r\n    {\r\n      name: \"Device holders\",\r\n      color: \"inherit\",\r\n      to: \"/\",\r\n      onClick: this.handleClick,\r\n      className: \"link\",\r\n    },\r\n    {\r\n      name: this.props.deviceHolder,\r\n      color: \"inherit\",\r\n      to: `/${this.props.deviceHolder}/devices`,\r\n      onClick: this.handleClick,\r\n      className: \"link\",\r\n    },\r\n    {\r\n      name: this.props.name,\r\n      color: \"textPrimary\",\r\n      className: \"link\",\r\n    },\r\n  ];\r\n\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n    console.info(\"You clicked a breadcrumb.\");\r\n  };\r\n\r\n  render() {\r\n    const pathIconButton = this.pathIconButton();\r\n    const iconButtonList = pathIconButton[0].iconButtons.map(\r\n      (iconButton, index) => (\r\n        <IconButtonCommon\r\n          key={index}\r\n          icon={iconButton.icon}\r\n          disable={iconButton.disable}\r\n          onClick={iconButton.onClick}\r\n          title={iconButton.title}\r\n        />\r\n      )\r\n    );\r\n    const length = this.pathList.length;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 col-md-8 col-sm-8 path\">\r\n            <Breadcrumbs\r\n              separator={<NavigateNextIcon fontSize=\"small\" />}\r\n              aria-label=\"breadcrumb\"\r\n            >\r\n              {this.pathList.map((element, index) =>\r\n                length === index + 1 ? (\r\n                  <Tooltip key={index} title={element.name}>\r\n                    <Typography\r\n                      color={element.color}\r\n                      className={element.className}\r\n                    >\r\n                      {element.name}\r\n                    </Typography>\r\n                  </Tooltip>\r\n                ) : (\r\n                  <Tooltip key={index} title={element.name}>\r\n                    <Link\r\n                      color={element.color}\r\n                      to={element.to}\r\n                      onClick={element.onClick}\r\n                      className={element.className}\r\n                    >\r\n                      {element.name}\r\n                    </Link>\r\n                  </Tooltip>\r\n                )\r\n              )}\r\n            </Breadcrumbs>\r\n            <h3 id=\"currentName\">{this.props.name}</h3>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-4 col-sm-4 content-flex-end\">\r\n            {iconButtonList}\r\n          </div>\r\n        </div>\r\n        <DialogDelete\r\n          title=\"device\"\r\n          history={this.props.history}\r\n          name={this.props.name}\r\n          deviceHolder={this.props.deviceHolder}\r\n          openDialog={this.state.openDelete}\r\n          handleCloseDelete={this.handleCloseDelete}\r\n          setNeedRefreshDevice={this.props.setNeedRefreshDevice}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PathDeviceDetail;\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport callApi from \"../util/ApiCaller\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass DialogEdit extends Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          deviceInfo: {},\r\n          deviceInfoBackup: {},\r\n        };\r\n      }\r\n\r\n      componentDidMount() {\r\n        this.setState({\r\n            deviceInfo: this.props.deviceInfo,\r\n            deviceInfoBackup: this.props.deviceInfo,\r\n         });\r\n      }\r\n\r\n      changeName = () => {\r\n        let result = \"\";\r\n        const { columnName } = this.props;\r\n        switch (columnName) {\r\n          case \"hardwareType\":\r\n            result = \"hardware type\";\r\n            break;\r\n          case \"interfaceVersion\":\r\n            result = \"interface version\";\r\n            break;\r\n          case \"connectionMechanism\":\r\n            result = \"connection mechanism\";\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return result;\r\n      };\r\n\r\n      componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            JSON.stringify(this.props.deviceInfo) !==\r\n            JSON.stringify(prevProps.deviceInfo)\r\n        ) {\r\n            this.setState({\r\n               deviceInfo: this.props.deviceInfo,\r\n               deviceInfoBackup: this.props.deviceInfo,\r\n            });\r\n          }\r\n      }\r\n\r\n      label = {\r\n        hardwareType: \"Hardware type\",\r\n        interfaceVersion: \"Interface version\",\r\n        connectionMechanism: \"Connection mechanism\",\r\n      };\r\n\r\n      renderField = () => {\r\n        const { columnName } = this.props;\r\n        const connectionMechanismList = [\r\n          { value: \"Call home\" },\r\n          { value: \"Non Callhome\" },\r\n        ];\r\n        let result = <> </>;\r\n        if (!columnName) {\r\n          return result;\r\n        }\r\n        switch (columnName) {\r\n          case \"connectionMechanism\":\r\n            result = (\r\n              <>\r\n                <TextField\r\n                  id=\"connectionMechanism\"\r\n                  select\r\n                  label=\"Connection mechanism\"\r\n                  name=\"connectionMechanism\"\r\n                  value={this.state.deviceInfo[columnName]}\r\n                  onChange={this.onChangeDiviceInfo}\r\n                  required\r\n                  fullWidth\r\n                >\r\n                  {connectionMechanismList.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.value}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </>\r\n            );\r\n            break;\r\n          default:\r\n            result = (\r\n              <>\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  name={columnName}\r\n                  label={this.label[columnName]}\r\n                  fullWidth\r\n                  required\r\n                  onChange={this.onChangeDiviceInfo}\r\n                  value={this.state.deviceInfo[columnName]}\r\n                />\r\n              </>\r\n            );\r\n            break;\r\n        }\r\n        return result;\r\n      };\r\n\r\n      handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onCloseDialog();\r\n        const {\r\n          name,\r\n          hardwareType,\r\n          interfaceVersion,\r\n          connectionMechanism,\r\n          deviceHolderName,\r\n        } = this.state.deviceInfo;\r\n        const deviceInfo = {\r\n          name,\r\n          hardwareType,\r\n          interfaceVersion,\r\n          connectionMechanism,\r\n          deviceHolderName,\r\n        };\r\n        console.log(\"deviceInfo: \", deviceInfo);\r\n        if (this.validateInput(deviceInfo)) {\r\n          this.resetDivice();\r\n          notification.error({\r\n            message: \"Error \",\r\n            description: \"Can not edit device\",\r\n          });\r\n          return;\r\n        }\r\n        callApi(`device/${this.props.deviceInfo.name}`, \"PUT\", deviceInfo)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              notification.success({\r\n                message: \"Success\",\r\n                description: \"Edit device successfully!\",\r\n              });\r\n\r\n              this.props.setNeedRefreshDevice(true);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            notification.error({\r\n              message: \"Error \",\r\n              description: error.message,\r\n            });\r\n          });\r\n      };\r\n\r\n      validateInput = (device) => {\r\n        let valid = false;\r\n        //check empty string\r\n        if (device.hardwareType === \"\") {\r\n          valid = true;\r\n        }\r\n        if (device.interfaceVersion === \"\") {\r\n          valid = true;\r\n        }\r\n        if (device.connectionMechanism === \"\") {\r\n          valid = true;\r\n        }\r\n        return valid;\r\n      };\r\n\r\n      onChangeDiviceInfo = (event) => {\r\n        const { name, value } = event.target;\r\n        console.log(\"name: \", name);\r\n        this.setState((prevState) => ({\r\n          deviceInfo: {\r\n            ...prevState.deviceInfo,\r\n            [name]: value,\r\n          },\r\n        }));\r\n      };\r\n\r\n       resetDivice = () => {\r\n          this.setState({\r\n            deviceInfo: this.state.deviceInfoBackup,\r\n          }, () => console.log(this.state))\r\n        }\r\n\r\n        handleCancel = () => {\r\n          this.props.onCloseDialog();\r\n          this.resetDivice();\r\n        }\r\n\r\n      render() {\r\n        const renderField = this.renderField();\r\n        const name = this.changeName();\r\n        return (\r\n          <div>\r\n            <Dialog\r\n              open={this.props.openDialog}\r\n              onClose={this.props.onCloseDialog}\r\n              aria-labelledby=\"form-dialog-title\"\r\n            >\r\n              <DialogTitle id=\"form-dialog-title\">Edit {name}</DialogTitle>\r\n              <DialogContent>\r\n                <form onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\r\n                  {renderField}\r\n                  <DialogActions>\r\n                    <Button onClick={this.handleCancel} color=\"primary\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n                      Save\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n              </DialogContent>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default DialogEdit;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"antd/dist/antd.css\";\r\nimport cloud from \"../images/clound_icon.png\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport DialogEdit from \"./DialogEdit\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nclass DeviceDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      columnName: \"\",\r\n    };\r\n  }\r\n  handleClickOpen = (columnName) => {\r\n    this.setState({\r\n      open: true,\r\n      columnName,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    let { deviceInfo } = this.props;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3 col-md-3 col-sm-3\"></div>\r\n          <div className=\"col-lg-6 col-md-6 col-sm-6 deviceDetailCard\">\r\n            <Card>\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\"col-lg-3 col-md-3 col-sm-3 mx-auto my-auto\"\r\n                  id=\"img\"\r\n                >\r\n                  <CardMedia\r\n                    className=\"mx-auto my-auto imageCloud\"\r\n                    image={cloud}\r\n                    title=\"device detail\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-9 col-md-9 col-sm-9\">\r\n                  <CardContent>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-6 col-md-6 col-sm-6\">\r\n                        <Typography variant=\"caption\" gutterBottom>\r\n                          Device name\r\n                        </Typography>\r\n                        <Typography className=\"deviceDetail\">\r\n                          {deviceInfo.name}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" gutterBottom>\r\n                          Hardware type\r\n                        </Typography>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-6 col-md-6 col-sm-6\">\r\n                            <Typography className=\"deviceDetail\">\r\n                              {deviceInfo.hardwareType}\r\n                            </Typography>\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-md-6 col-sm-6 pen\">\r\n                            <IconButton\r\n                              onClick={() =>\r\n                                this.handleClickOpen(\"hardwareType\")\r\n                              }\r\n                            >\r\n                              <InputAdornment position=\"start\">\r\n                                <EditIcon />\r\n                              </InputAdornment>\r\n                            </IconButton>\r\n                          </div>\r\n                        </div>\r\n                        <Typography variant=\"caption\" gutterBottom>\r\n                          Interface version\r\n                        </Typography>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-6 col-md-6 col-sm-6\">\r\n                            <Typography className=\"deviceDetail\">\r\n                              {deviceInfo.interfaceVersion}\r\n                            </Typography>\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-md-6 col-sm-6 pen\">\r\n                            <IconButton\r\n                              onClick={() =>\r\n                                this.handleClickOpen(\"interfaceVersion\")\r\n                              }\r\n                            >\r\n                              <InputAdornment position=\"start\">\r\n                                <EditIcon />\r\n                              </InputAdornment>\r\n                            </IconButton>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-6 col-md-6 col-sm-6\">\r\n                        <Typography variant=\"caption\" gutterBottom>\r\n                          Connection mechanism\r\n                        </Typography>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-lg-6 col-md-6 col-sm-6\">\r\n                            <Typography className=\"deviceDetail\">\r\n                              {deviceInfo.connectionMechanism}\r\n                            </Typography>\r\n                          </div>\r\n                          <div className=\"col-lg-6 col-md-6 col-sm-6 pen\">\r\n                            <IconButton\r\n                              onClick={() =>\r\n                                this.handleClickOpen(\"connectionMechanism\")\r\n                              }\r\n                            >\r\n                              <InputAdornment position=\"start\">\r\n                                <EditIcon />\r\n                              </InputAdornment>\r\n                            </IconButton>\r\n                          </div>\r\n                        </div>\r\n                        <Typography variant=\"caption\" gutterBottom>\r\n                          Device holder\r\n                        </Typography>\r\n                        <Typography>{deviceInfo.deviceHolderName}</Typography>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-lg-3 col-md-3 col-sm-3\"></div>\r\n        </div>\r\n        <DialogEdit\r\n          openDialog={this.state.open}\r\n          onCloseDialog={this.handleClose}\r\n          deviceInfo={deviceInfo}\r\n          columnName={this.state.columnName}\r\n          setNeedRefreshDevice={this.props.setNeedRefreshDevice}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeviceDetail;\r\n","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport DeviceDetail from \"./DeviceDetail.js\";\r\nimport callApi from \"../util/ApiCaller.js\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst a11yProps = (index, disable) => {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n    disabled: disable,\r\n  };\r\n};\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div hidden={value !== index} {...other} className=\"tabContent\">\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TabMenuDeviceDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n      deviceInfo: \"\",\r\n    };\r\n  }\r\n\r\n  getDevice = () => {\r\n    let {name} = this.props;\r\n    callApi(`device?name=${name}`, \"GET\", null)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.setState({\r\n            deviceInfo: res.data,\r\n          })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n          message: \"Error \",\r\n          description: error.message,\r\n        });\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.getDevice();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.needRefreshDevice) {\r\n      this.getDevice();\r\n      this.props.setNeedRefreshDevice(false);\r\n    }\r\n  }\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue });\r\n  };\r\n\r\n  render() {\r\n    let { deviceInfo } = this.state;\r\n    return (\r\n      <div className=\"row\">\r\n        <AppBar position=\"static\" elevation={0}>\r\n          <Tabs\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            // TabIndicatorProps={{ style: { background: \"#28b8ed\" } }}\r\n            className=\"tabHeader\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n          >\r\n            <Tab  className=\"tabTitle\" label=\"DEVICE\" {...a11yProps(0, false)} />\r\n            <Tab  className=\"tabTitle\" label=\"EXTENSIONS\" {...a11yProps(1, false)} />\r\n            <Tab  className=\"tabTitle\" label=\"LOGGING\" {...a11yProps(2, false)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={this.state.value} index={0}>\r\n          <DeviceDetail\r\n            deviceInfo={deviceInfo}\r\n            setNeedRefreshDevice={this.props.setNeedRefreshDevice}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={this.state.value} index={1}></TabPanel>\r\n        <TabPanel value={this.state.value} index={2}>\r\n        </TabPanel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabMenuDeviceDetail;\r\n","import React, { Component } from \"react\";\r\nimport PathDeviceDetail from \"../components/PathDeviceDetail.js\";\r\nimport TabMenuDeviceDetail from \"../components/TabMenuDeviceDetail.js\";\r\n\r\nclass DeviceDetailPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      needRefreshDevice: false,\r\n    };\r\n  }\r\n\r\n  setNeedRefreshDevice = (value) => {\r\n    this.setState({\r\n      needRefreshDevice: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {deviceHolder, name} = this.props.match.params;\r\n    const {history} = this.props;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <div className=\"row\" id=\"tool\">\r\n          <PathDeviceDetail\r\n            history={history}\r\n            name={name}\r\n            deviceHolder={deviceHolder}\r\n            setNeedRefreshDevice={this.setNeedRefreshDevice}\r\n          />\r\n        </div>\r\n        <TabMenuDeviceDetail\r\n          name={name}\r\n          deviceHolder={deviceHolder}\r\n          needRefreshDevice={this.state.needRefreshDevice}\r\n          setNeedRefreshDevice={this.setNeedRefreshDevice}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeviceDetailPage;\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport callApi from \"../util/ApiCaller\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass DialogDeviceHolder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      deviceHolderName: \"\"\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let {deviceHolderName} = this.state;\r\n    if (deviceHolderName === \"\") {\r\n      notification.error({\r\n        message: \"Error \",\r\n        description: \"Mandatory attribute (name) is missing\",\r\n      });\r\n      return;\r\n    }\r\n    let deviceHolderObj = {deviceHolderName};\r\n    callApi(\"device-holder\", \"POST\", deviceHolderObj)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          notification.success({\r\n            message: \"Success\",\r\n            description: \"Add device holder successfully!\",\r\n          });\r\n          this.props.setNeedRefreshDeviceHolderState(true);\r\n          this.setState({deviceHolderName: \"\"});\r\n        }\r\n      })\r\n      .catch((error) => {\r\n            if(error.response.data) {\r\n               notification.error({\r\n                 message: \"Error\",\r\n                 description: error.response.data.message,\r\n               })\r\n             } else {\r\n               notification.error({\r\n                 message: \"Error\",\r\n                 description: error.message,\r\n               })\r\n             }\r\n//        notification.error({\r\n//          message: \"Error \",\r\n//          description: error.message,\r\n//        });\r\n      });\r\n  };\r\n\r\n  onChangeDiviceHolder = (event) => {\r\n    this.setState({deviceHolderName: event.target.value});\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={this.props.openDialog}\r\n          onClose={this.props.onCloseDialog}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Create device holder</DialogTitle>\r\n          <DialogContent>\r\n            <form onSubmit={this.handleSubmit} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"deviceHolderName\"\r\n                name=\"deviceHolderName\"\r\n                label=\"Device holder name\"\r\n                fullWidth\r\n                autoFocus\r\n                required\r\n                onChange={this.onChangeDiviceHolder}\r\n              />\r\n              <DialogActions>\r\n                <Button onClick={this.props.onCloseDialog} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={this.props.onCloseDialog}\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                >\r\n                  Save\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DialogDeviceHolder;\r\n","import React, { Component } from \"react\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport IconButtonCommon from \"./common/button/IconButton\";\r\nimport \"../common.css\";\r\nimport DialogDeviceHolder from \"./DialogDeviceHolder.js\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DialogDelete from \"./DialogDelete.js\";\r\n\r\nclass PathDeviceHolder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openAdd: false,\r\n      openDelete: false,\r\n    };\r\n  }\r\n\r\n  onClickDeleteButton = () => {\r\n    this.setState({ openDelete: true });\r\n  };\r\n\r\n  onClickReloadButton = () => {\r\n    \r\n    this.props.setNeedRefreshDeviceHolderState(true);\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ openAdd: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ openAdd: false });\r\n  };\r\n\r\n  handleCloseDelete = () => {\r\n    this.setState({ openDelete: false });\r\n  };\r\n\r\n  pathIconButton = [\r\n    {\r\n      pathName: \"Breadcrumb\",\r\n      iconButtons: [\r\n        {\r\n          id: 1,\r\n          icon: <AddCircleOutlineIcon />,\r\n          disable: false,\r\n          onClick: this.handleClickOpen,\r\n          title: \"Create device holder\",\r\n        },\r\n        {\r\n          id: 2,\r\n          icon: <DeleteIcon />,\r\n          disable: false,\r\n          onClick: this.onClickDeleteButton,\r\n          title: \"Delete all device holders\",\r\n        },\r\n        {\r\n          id: 3,\r\n          icon: <ReplayIcon />,\r\n          disable: false,\r\n          onClick: this.onClickReloadButton,\r\n          title: \"Refresh\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n    console.info(\"You clicked a breadcrumb.\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 col-md-8 col-sm-8 path\">\r\n            <Breadcrumbs\r\n              separator={<NavigateNextIcon fontSize=\"small\" />}\r\n              aria-label=\"breadcrumb\"\r\n            >\r\n              <Tooltip title=\"Devices\">\r\n                <Typography color=\"textPrimary\" className=\"link\">\r\n                  Device holders\r\n                </Typography>\r\n              </Tooltip>\r\n            </Breadcrumbs>\r\n            <h3 id=\"currentName\">Device holders</h3>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-4 col-sm-4 content-flex-end\">\r\n            {this.pathIconButton[0].iconButtons.map((iconButton, index) => (\r\n              <IconButtonCommon\r\n                key={index}\r\n                icon={iconButton.icon}\r\n                disable={iconButton.disable}\r\n                onClick={iconButton.onClick}\r\n                title={iconButton.title}\r\n              />\r\n            ))}\r\n            <DialogDeviceHolder\r\n              openDialog={this.state.openAdd}\r\n              onCloseDialog={this.handleClose}\r\n              setNeedRefreshDeviceHolderState={this.props.setNeedRefreshDeviceHolderState}\r\n            />\r\n            <DialogDelete\r\n          title=\"device holders\"\r\n          openDialog={this.state.openDelete}\r\n          handleCloseDelete={this.handleCloseDelete}\r\n          setNeedRefreshDeviceHolderState={this.props.setNeedRefreshDeviceHolderState}\r\n        />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PathDeviceHolder;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport connection from \"./../images/connection.png\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nclass DeviceHolderItem extends Component {\r\n  render() {\r\n    const { deviceHolderItem } = this.props;\r\n    return (\r\n      <div>\r\n        {deviceHolderItem && (\r\n          <Link to={`/${deviceHolderItem.deviceHolderName}/devices`}>\r\n            <Card variant=\"outlined\" className=\"cardRoot\">\r\n              <CardMedia\r\n                className=\"cardCover\"\r\n                image={connection}\r\n                title=\"device holder\"\r\n              />\r\n              <div className=\"cardDetail\">\r\n                <CardContent className=\"cardText\">\r\n                  <Tooltip title={deviceHolderItem.deviceHolderName}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {deviceHolderItem.deviceHolderName}\r\n                    </Typography>\r\n                  </Tooltip>\r\n                  <Tooltip title= {`${deviceHolderItem.noOfDevices} devices`}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      {deviceHolderItem.noOfDevices} devices\r\n                    </Typography>\r\n                  </Tooltip>\r\n                </CardContent>\r\n              </div>\r\n            </Card>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeviceHolderItem;\r\n","import React, { Component } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport DeviceHolderItem from \"./DeviceHolderItem.js\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nclass DeviceHolderList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deviceHolderList: [],\r\n      numberRowPerPage: 8,\r\n      totalRow: 0,\r\n      page: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      deviceHolderList: this.props.deviceHolderList,\r\n      totalRow: this.props.total,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      JSON.stringify(this.props.deviceHolderList) !==\r\n      JSON.stringify(prevProps.deviceHolderList)\r\n    ) {\r\n      this.setState({\r\n        deviceHolderList: this.props.deviceHolderList,\r\n        totalRow: this.props.total,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangePage = (page) => {\r\n    this.setState({ page: page });\r\n    let limit = this.state.numberRowPerPage;\r\n    this.props.changePage(page + 1, limit);\r\n  };\r\n\r\n  handleChangeRowPerPage = (value) => {\r\n    this.setState({ numberRowPerPage: value });\r\n    this.setState({ page: 0});\r\n    this.props.changePage(1, value);\r\n  };\r\n\r\n  render() {\r\n    let { deviceHolderList, totalRow } = this.state;\r\n    console.log(\"tttt: \", this.props.total);\r\n    const hasDeviceHolderList = deviceHolderList && deviceHolderList.length > 0;\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        {hasDeviceHolderList && (\r\n          <MaterialTable\r\n            columns={[\r\n              {\r\n                field: \"deviceItem\",\r\n                render: (rowData) => {\r\n                  let result = <> </>;\r\n                  if (\r\n                    rowData.deviceHolderItem &&\r\n                    rowData.deviceHolderItem.length > 0\r\n                  ) {\r\n                    result = rowData.deviceHolderItem.map(\r\n                      (deviceHolder, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"col-lg-3 col-md-3 col-sm-3 pr-1 pl-1 pb-3\"\r\n                        >\r\n                          <DeviceHolderItem deviceHolderItem={deviceHolder} />\r\n                        </div>\r\n                      )\r\n                    );\r\n                  }\r\n                  return <div className=\"dislay-flexbox\"> {result} </div>;\r\n                },\r\n              },\r\n            ]}\r\n            data={[{ deviceHolderItem: deviceHolderList }]}\r\n            options={{\r\n              toolbar: false,\r\n            }}\r\n            components={{\r\n              Pagination: (props) => (\r\n                <TablePagination\r\n                  // {...props}\r\n                  component=\"div\"\r\n                  labelRowsPerPage=\"Items per page:\"\r\n                  rowsPerPageOptions={[8, 16, 24]}\r\n                  rowsPerPage={this.state.numberRowPerPage}\r\n                  count={totalRow}\r\n                  page={this.state.page}\r\n                  onChangePage={(e, page) => this.handleChangePage(page)}\r\n                  onChangeRowsPerPage={(event) => {\r\n                    this.handleChangeRowPerPage(event.target.value);\r\n                  }}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeviceHolderList;\r\n","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport DeviceHolderList from \"./DeviceHolderList.js\";\r\nimport callApi from \"../util/ApiCaller.js\";\r\nimport { notification } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport LoadingSpinerComponent from \"./common/loading/loading.js\";\r\n\r\nconst a11yProps = (index, disable) => {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n    disabled: disable,\r\n  };\r\n};\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <div hidden={value !== index} {...other} className=\"tabContent\">\r\n      {value === index && <div>{children}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass TabMenuDeviceHolder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: 0,\r\n      deviceHolderList: [],\r\n      total:0,\r\n      page:1,\r\n      limit: 8,\r\n    };\r\n  }\r\n\r\n  getDiviceHolderList = (page, limit) => {\r\n    callApi(`device-holder?page=${page}&limit=${limit}`, \"GET\", null)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(\"device holders: \", res.data);\r\n          this.setState({\r\n            deviceHolderList: res.data.deviceHolderVOS,\r\n            total: res.data.total,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        notification.error({\r\n          message: \"Error \",\r\n          description: error.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    //send request get all device holder\r\n    let {page, limit} = this.state;\r\n    this.getDiviceHolderList(page, limit);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.needRefreshDeviceHolder) {\r\n      let {page, limit} = this.state;\r\n      this.getDiviceHolderList(page, limit);\r\n      this.props.setNeedRefreshDeviceHolderState(false);\r\n    }\r\n  }\r\n\r\n  changePage = (page, limit) => {\r\n    this.setState({\r\n      page: page,\r\n      limit: limit,\r\n    });\r\n    this.getDiviceHolderList(page, limit);\r\n  }\r\n\r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue });\r\n  };\r\n\r\n  render() {\r\n    let { deviceHolderList } = this.state;\r\n    let {total} = this.state;\r\n    console.log(\"total: \", total);\r\n    return (\r\n      <div className=\"row\">\r\n        <AppBar position=\"static\" elevation={0}>\r\n          <Tabs\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            aria-label=\"tabs menu\"\r\n            // TabIndicatorProps={{ style: { background: \"#00C9FF\"}}}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            className=\"tabHeader\"\r\n          >\r\n            <Tab\r\n              className=\"tabTitle\"\r\n              label=\"DEVICE HOLDERS\"\r\n              {...a11yProps(0, false)}\r\n            />\r\n            <Tab\r\n              className=\"tabTitle\"\r\n              label=\"EXTENSIONS\"\r\n              {...a11yProps(1, false)}\r\n            />\r\n            <Tab\r\n              className=\"tabTitle\"\r\n              label=\"LOGGING\"\r\n              {...a11yProps(2, false)}\r\n            />\r\n          </Tabs>\r\n        </AppBar>\r\n        <TabPanel value={this.state.value} index={0}>\r\n          <LoadingSpinerComponent />\r\n          <DeviceHolderList changePage={this.changePage} deviceHolderList={deviceHolderList} total = {total} />\r\n        </TabPanel>\r\n        <TabPanel value={this.state.value} index={1}></TabPanel>\r\n        <TabPanel value={this.state.value} index={2}></TabPanel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TabMenuDeviceHolder;\r\n","import React, { Component } from \"react\";\r\nimport PathDeviceHolder from \"../components/PathDeviceHolder.js\";\r\nimport TabMenuDeviceHolder from \"../components/TabMenuDeviceHolder.js\";\r\n\r\nclass DeviceHolderPage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      needRefreshDeviceHolder: false,\r\n    }\r\n  }\r\n\r\n  setNeedRefreshDeviceHolderState = (value) => {\r\n    this.setState({\r\n        needRefreshDeviceHolder: value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <div className=\"row\" id=\"tool\">\r\n          <PathDeviceHolder setNeedRefreshDeviceHolderState={this.setNeedRefreshDeviceHolderState} />\r\n        </div>\r\n        <TabMenuDeviceHolder\r\n        needRefreshDeviceHolder={this.state.needRefreshDeviceHolder}\r\n        setNeedRefreshDeviceHolderState={this.setNeedRefreshDeviceHolderState}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeviceHolderPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFoundPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"col-lg-12 col-md-12 col-sm-12\">\r\n        <h2>Page not found</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header.js\";\nimport DevicesPage from \"./pages/DevicesPage.js\";\nimport DeviceDetailPage from \"./pages/DeviceDetailPage.js\";\nimport DeviceHolderPage from \"./pages/DeviceHolderPage.js\";\nimport NotFoundPage from \"./pages/NotFoundPage.js\";\nimport { notification } from \"antd\"\nimport {\n  Switch,\n  Route,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\n\nclass App extends Component {\n  render() {\n    notification.config({\n      duration: 3\n    });\n    return (\n      <Router>\n        <div className=\"container-fluid\">\n          <Header />\n          <div className=\"row\">\n            <Switch>\n              <Route path=\"/\" exact component={DeviceHolderPage}></Route>\n              <Route path=\"/:deviceHolder/devices\" exact component={DevicesPage}></Route>\n              <Route path=\"/:deviceHolder/devices/:name\" exact component={DeviceDetailPage}></Route>\n              <Route component={NotFoundPage}></Route>\n            </Switch>\n          </div>\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}